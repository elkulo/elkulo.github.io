{"version":3,"file":"component---src-nodes-product-tag-js-04ece91e0bae23464c5c.js","mappings":"6LAwBA,UAZwBA,IAAyB,IAAxB,KAAEC,EAAI,SAAEC,GAAUF,EACrCG,EAAYC,UAAUF,EAASG,SAASC,MAAM,KAAKC,OAAO,GAAG,IAKjE,MAJoC,MAAhCL,EAASG,SAASE,OAAO,KAC3BJ,EAAYC,UAAUF,EAASG,SAASC,MAAM,KAAKC,OAAO,GAAG,KAI7DC,EAAAA,cAACC,EAAAA,EAAM,CAACP,SAAUA,EAAUQ,MAAOP,EAAWQ,WAAW,WACvDH,EAAAA,cAACI,EAAAA,EAAQ,CAACX,KAAMA,EAAMS,MAAOP,EAAWU,cAAc,QAC/C,EAKN,MA8BMC,EAAOC,IAAmB,IAAlB,SAAEb,GAAUa,EAC3BZ,EAAYC,UAAUF,EAASG,SAASC,MAAM,KAAKC,OAAO,GAAG,IAIjE,MAHoC,MAAhCL,EAASG,SAASE,OAAO,KAC3BJ,EAAYC,UAAUF,EAASG,SAASC,MAAM,KAAKC,OAAO,GAAG,KAExDC,EAAAA,cAACQ,EAAAA,EAAQ,CAACN,MAAOP,GAAa,C","sources":["webpack://el.kulo/./src/nodes/product-tag.js"],"sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Metadata from '@/components/atoms/Metadata'\nimport Layout from '@/templates/layout.template'\nimport Template from '@/templates/product/product-index.template'\n\n/**\n * PRODUCT PAGE - Tag.\n *\n * @param  {{data: object, location: string}} props\n * @return {JSX.Element}\n */\nconst ProductTagIndex = ({ data, location }) => {\n  let pageTitle = decodeURI(location.pathname.split('/').slice(-1)[0])\n  if (location.pathname.slice(-1) === '/') {\n    pageTitle = decodeURI(location.pathname.split('/').slice(-2)[0])\n  }\n\n  return (\n    <Layout location={location} title={pageTitle} isPageType=\"Product\">\n      <Template data={data} title={pageTitle} isProductType=\"tag\" />\n    </Layout>\n  )\n}\nexport default ProductTagIndex\n\nexport const pageQuery = graphql`\n  query TagPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allCategory: allInternalPosts {\n      distinct(field: { category: SELECT })\n    }\n    allPost: allInternalPosts(\n      filter: { tag: { eq: $slug } }\n      sort: { fields: { post_id: DESC } }\n    ) {\n      edges {\n        node {\n          id\n          alternative_id\n          updated\n          title\n          category\n          tag\n          attachment\n          link\n        }\n      }\n    }\n  }\n`\n\nexport const Head = ({ location }) => {\n  let pageTitle = decodeURI(location.pathname.split('/').slice(-1)[0])\n  if (location.pathname.slice(-1) === '/') {\n    pageTitle = decodeURI(location.pathname.split('/').slice(-2)[0])\n  }\n  return <Metadata title={pageTitle} />\n}\n"],"names":["_ref","data","location","pageTitle","decodeURI","pathname","split","slice","React","Layout","title","isPageType","Template","isProductType","Head","_ref2","Metadata"],"sourceRoot":""}