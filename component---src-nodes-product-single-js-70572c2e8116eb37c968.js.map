{"version":3,"file":"component---src-nodes-product-single-js-70572c2e8116eb37c968.js","mappings":"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","sources":["webpack://el.kulo/./node_modules/@mui/icons-material/InsertLink.js","webpack://el.kulo/../src/image-utils.ts","webpack://el.kulo/../src/components/hooks.ts","webpack://el.kulo/../src/components/layout-wrapper.tsx","webpack://el.kulo/../src/components/picture.tsx","webpack://el.kulo/../src/components/placeholder.tsx","webpack://el.kulo/../src/components/main-image.tsx","webpack://el.kulo/../src/components/gatsby-image.server.tsx","webpack://el.kulo/../src/components/gatsby-image.browser.tsx","webpack://el.kulo/../src/components/static-image.server.tsx","webpack://el.kulo/../src/components/static-image.tsx","webpack://el.kulo/./node_modules/gatsby-plugin-image/node_modules/camelcase/index.js","webpack://el.kulo/./src/components/atoms/Image.js","webpack://el.kulo/./src/templates/product/product-single.module.scss","webpack://el.kulo/./src/components/molecules/bio.component.js","webpack://el.kulo/./src/components/atoms/LinearIndeterminate.js","webpack://el.kulo/./node_modules/@mui/material/Stack/Stack.js","webpack://el.kulo/./node_modules/@mui/material/styles/cssUtils.js","webpack://el.kulo/./node_modules/@mui/material/Skeleton/skeletonClasses.js","webpack://el.kulo/./node_modules/@mui/material/Skeleton/Skeleton.js","webpack://el.kulo/./node_modules/@mui/material/Grid/GridContext.js","webpack://el.kulo/./node_modules/@mui/material/Grid/gridClasses.js","webpack://el.kulo/./node_modules/@mui/material/Grid/Grid.js","webpack://el.kulo/./src/components/atoms/DummySite.js","webpack://el.kulo/./src/templates/product/product-single.template.js","webpack://el.kulo/./src/nodes/product-single.js"],"sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _createSvgIcon = _interopRequireDefault(require(\"./utils/createSvgIcon\"));\nvar _jsxRuntime = require(\"react/jsx-runtime\");\nvar _default = (0, _createSvgIcon.default)( /*#__PURE__*/(0, _jsxRuntime.jsx)(\"path\", {\n  d: \"M3.9 12c0-1.71 1.39-3.1 3.1-3.1h4V7H7c-2.76 0-5 2.24-5 5s2.24 5 5 5h4v-1.9H7c-1.71 0-3.1-1.39-3.1-3.1zM8 13h8v-2H8v2zm9-6h-4v1.9h4c1.71 0 3.1 1.39 3.1 3.1s-1.39 3.1-3.1 3.1h-4V17h4c2.76 0 5-2.24 5-5s-2.24-5-5-5z\"\n}), 'InsertLink');\nexports.default = _default;","import camelCase from \"camelcase\"\nimport type { IGatsbyImageData } from \"./index\"\n\nconst DEFAULT_PIXEL_DENSITIES = [0.25, 0.5, 1, 2]\nexport const DEFAULT_BREAKPOINTS = [750, 1080, 1366, 1920]\nexport const EVERY_BREAKPOINT = [\n  320, 654, 768, 1024, 1366, 1600, 1920, 2048, 2560, 3440, 3840, 4096,\n]\nconst DEFAULT_FLUID_WIDTH = 800\nconst DEFAULT_FIXED_WIDTH = 800\nconst DEFAULT_ASPECT_RATIO = 4 / 3\n\nexport type Fit = \"cover\" | \"fill\" | \"inside\" | \"outside\" | \"contain\"\n\nexport type Layout = \"fixed\" | \"fullWidth\" | \"constrained\"\nexport type ImageFormat = \"jpg\" | \"png\" | \"webp\" | \"avif\" | \"auto\" | \"\"\n\n/**\n * The minimal required reporter, as we don't want to import it from gatsby-cli\n */\nexport interface IReporter {\n  warn(message: string): void\n}\n\nexport interface ISharpGatsbyImageArgs {\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  placeholder?: \"tracedSVG\" | \"dominantColor\" | \"blurred\" | \"none\"\n  tracedSVGOptions?: Record<string, unknown>\n  width?: number\n  height?: number\n  aspectRatio?: number\n  sizes?: string\n  quality?: number\n  transformOptions?: {\n    fit?: Fit\n    cropFocus?: number | string\n    duotone?: {\n      highlight: string\n      shadow: string\n      opacity?: number\n    }\n    grayscale?: boolean\n    rotate?: number\n    trim?: number\n  }\n  jpgOptions?: Record<string, unknown>\n  pngOptions?: Record<string, unknown>\n  webpOptions?: Record<string, unknown>\n  avifOptions?: Record<string, unknown>\n  blurredOptions?: { width?: number; toFormat?: ImageFormat }\n  breakpoints?: Array<number>\n  outputPixelDensities?: Array<number>\n  backgroundColor?: string\n}\n\nexport interface IImageSizeArgs {\n  width?: number\n  height?: number\n  layout?: Layout\n  filename: string\n  outputPixelDensities?: Array<number>\n  breakpoints?: Array<number>\n  fit?: Fit\n  reporter?: IReporter\n  sourceMetadata: { width: number; height: number }\n}\n\nexport interface IImageSizes {\n  sizes: Array<number>\n  presentationWidth: number\n  presentationHeight: number\n  aspectRatio: number\n  unscaledWidth: number\n}\n\nexport interface IImage {\n  src: string\n  width: number\n  height: number\n  format: ImageFormat\n}\n\nexport interface IGatsbyImageHelperArgs {\n  pluginName: string\n  generateImageSource: (\n    filename: string,\n    width: number,\n    height: number,\n    format: ImageFormat,\n    fit?: Fit,\n    options?: Record<string, unknown>\n  ) => IImage\n  layout?: Layout\n  formats?: Array<ImageFormat>\n  filename: string\n  placeholderURL?: string\n  width?: number\n  height?: number\n  sizes?: string\n  reporter?: IReporter\n  sourceMetadata?: { width: number; height: number; format: ImageFormat }\n  fit?: Fit\n  options?: Record<string, unknown>\n  breakpoints?: Array<number>\n  backgroundColor?: string\n  aspectRatio?: number\n}\n\nconst warn = (message: string): void => console.warn(message)\n\nconst sortNumeric = (a: number, b: number): number => a - b\n\nexport const getSizes = (width: number, layout: Layout): string | undefined => {\n  switch (layout) {\n    // If screen is wider than the max size, image width is the max size,\n    // otherwise it's the width of the screen\n    case `constrained`:\n      return `(min-width: ${width}px) ${width}px, 100vw`\n\n    // Image is always the same width, whatever the size of the screen\n    case `fixed`:\n      return `${width}px`\n\n    // Image is always the width of the screen\n    case `fullWidth`:\n      return `100vw`\n\n    default:\n      return undefined\n  }\n}\n\nexport const getSrcSet = (images: Array<IImage>): string =>\n  images.map(image => `${image.src} ${image.width}w`).join(`,\\n`)\n\nexport function formatFromFilename(filename: string): ImageFormat | undefined {\n  const dot = filename.lastIndexOf(`.`)\n  if (dot !== -1) {\n    const ext = filename.slice(dot + 1)\n    if (ext === `jpeg`) {\n      return `jpg`\n    }\n    if (ext.length === 3 || ext.length === 4) {\n      return ext as ImageFormat\n    }\n  }\n  return undefined\n}\n\nexport function setDefaultDimensions(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageHelperArgs {\n  let {\n    layout = `constrained`,\n    width,\n    height,\n    sourceMetadata,\n    breakpoints,\n    aspectRatio,\n    formats = [`auto`, `webp`],\n  } = args\n  formats = formats.map(format => format.toLowerCase() as ImageFormat)\n  layout = camelCase(layout) as Layout\n\n  if (width && height) {\n    return { ...args, formats, layout, aspectRatio: width / height }\n  }\n  if (sourceMetadata.width && sourceMetadata.height && !aspectRatio) {\n    aspectRatio = sourceMetadata.width / sourceMetadata.height\n  }\n\n  if (layout === `fullWidth`) {\n    width = width || sourceMetadata.width || breakpoints[breakpoints.length - 1]\n    height = height || Math.round(width / (aspectRatio || DEFAULT_ASPECT_RATIO))\n  } else {\n    if (!width) {\n      if (height && aspectRatio) {\n        width = height * aspectRatio\n      } else if (sourceMetadata.width) {\n        width = sourceMetadata.width\n      } else if (height) {\n        width = Math.round(height / DEFAULT_ASPECT_RATIO)\n      } else {\n        width = DEFAULT_FIXED_WIDTH\n      }\n    }\n\n    if (aspectRatio && !height) {\n      height = Math.round(width / aspectRatio)\n    } else if (!aspectRatio) {\n      aspectRatio = width / height\n    }\n  }\n  return { ...args, width, height, aspectRatio, layout, formats }\n}\n\n/**\n * Use this for getting an image for the blurred placeholder. This ensures the\n * aspect ratio and crop match the main image\n */\nexport function getLowResolutionImageURL(\n  args: IGatsbyImageHelperArgs,\n  width = 20\n): string {\n  args = setDefaultDimensions(args)\n  const { generateImageSource, filename, aspectRatio } = args\n  return generateImageSource(\n    filename,\n    width,\n    Math.round(width / aspectRatio),\n    args.sourceMetadata.format || `jpg`,\n    args.fit,\n    args.options\n  )?.src\n}\n\nexport function generateImageData(\n  args: IGatsbyImageHelperArgs\n): IGatsbyImageData {\n  args = setDefaultDimensions(args)\n\n  let {\n    pluginName,\n    sourceMetadata,\n    generateImageSource,\n    layout,\n    fit,\n    options,\n    width,\n    height,\n    filename,\n    reporter = { warn },\n    backgroundColor,\n    placeholderURL,\n  } = args\n\n  if (!pluginName) {\n    reporter.warn(\n      `[gatsby-plugin-image] \"generateImageData\" was not passed a plugin name`\n    )\n  }\n\n  if (typeof generateImageSource !== `function`) {\n    throw new Error(`generateImageSource must be a function`)\n  }\n\n  if (!sourceMetadata || (!sourceMetadata.width && !sourceMetadata.height)) {\n    // No metadata means we let the CDN handle max size etc, aspect ratio etc\n    sourceMetadata = {\n      width,\n      height,\n      format: sourceMetadata?.format || formatFromFilename(filename) || `auto`,\n    }\n  } else if (!sourceMetadata.format) {\n    sourceMetadata.format = formatFromFilename(filename)\n  }\n\n  const formats = new Set<ImageFormat>(args.formats)\n\n  if (formats.size === 0 || formats.has(`auto`) || formats.has(``)) {\n    formats.delete(`auto`)\n    formats.delete(``)\n    formats.add(sourceMetadata.format)\n  }\n\n  if (formats.has(`jpg`) && formats.has(`png`)) {\n    reporter.warn(\n      `[${pluginName}] Specifying both 'jpg' and 'png' formats is not supported. Using 'auto' instead`\n    )\n    if (sourceMetadata.format === `jpg`) {\n      formats.delete(`png`)\n    } else {\n      formats.delete(`jpg`)\n    }\n  }\n\n  const imageSizes = calculateImageSizes({ ...args, sourceMetadata })\n\n  const result: IGatsbyImageData[\"images\"] = {\n    sources: [],\n  }\n\n  let sizes = args.sizes\n  if (!sizes) {\n    sizes = getSizes(imageSizes.presentationWidth, layout)\n  }\n\n  formats.forEach(format => {\n    const images = imageSizes.sizes\n      .map(size => {\n        const imageSrc = generateImageSource(\n          filename,\n          size,\n          Math.round(size / imageSizes.aspectRatio),\n          format,\n          fit,\n          options\n        )\n        if (\n          !imageSrc?.width ||\n          !imageSrc.height ||\n          !imageSrc.src ||\n          !imageSrc.format\n        ) {\n          reporter.warn(\n            `[${pluginName}] The resolver for image ${filename} returned an invalid value.`\n          )\n          return undefined\n        }\n        return imageSrc\n      })\n      .filter(Boolean)\n\n    if (format === `jpg` || format === `png` || format === `auto`) {\n      const unscaled =\n        images.find(img => img.width === imageSizes.unscaledWidth) || images[0]\n\n      if (unscaled) {\n        result.fallback = {\n          src: unscaled.src,\n          srcSet: getSrcSet(images),\n          sizes,\n        }\n      }\n    } else {\n      result.sources?.push({\n        srcSet: getSrcSet(images),\n        sizes,\n        type: `image/${format}`,\n      })\n    }\n  })\n\n  const imageProps: Partial<IGatsbyImageData> = {\n    images: result,\n    layout,\n    backgroundColor,\n  }\n\n  if (placeholderURL) {\n    imageProps.placeholder = { fallback: placeholderURL }\n  }\n\n  switch (layout) {\n    case `fixed`:\n      imageProps.width = imageSizes.presentationWidth\n      imageProps.height = imageSizes.presentationHeight\n      break\n\n    case `fullWidth`:\n      imageProps.width = 1\n      imageProps.height = 1 / imageSizes.aspectRatio\n      break\n\n    case `constrained`:\n      imageProps.width = args.width || imageSizes.presentationWidth || 1\n      imageProps.height = (imageProps.width || 1) / imageSizes.aspectRatio\n  }\n\n  return imageProps as IGatsbyImageData\n}\n\nconst dedupeAndSortDensities = (values: Array<number>): Array<number> =>\n  Array.from(new Set([1, ...values])).sort(sortNumeric)\n\nexport function calculateImageSizes(args: IImageSizeArgs): IImageSizes {\n  const {\n    width,\n    height,\n    filename,\n    layout = `constrained`,\n    sourceMetadata: imgDimensions,\n    reporter = { warn },\n    breakpoints = DEFAULT_BREAKPOINTS,\n  } = args\n\n  // check that all dimensions provided are positive\n  const userDimensions = { width, height }\n  const erroneousUserDimensions = Object.entries(userDimensions).filter(\n    ([_, size]) => typeof size === `number` && size < 1\n  )\n  if (erroneousUserDimensions.length) {\n    throw new Error(\n      `Specified dimensions for images must be positive numbers (> 0). Problem dimensions you have are ${erroneousUserDimensions\n        .map(dim => dim.join(`: `))\n        .join(`, `)}`\n    )\n  }\n\n  if (layout === `fixed`) {\n    return fixedImageSizes(args)\n  } else if (layout === `constrained`) {\n    return responsiveImageSizes(args)\n  } else if (layout === `fullWidth`) {\n    return responsiveImageSizes({ breakpoints, ...args })\n  } else {\n    reporter.warn(\n      `No valid layout was provided for the image at ${filename}. Valid image layouts are fixed, fullWidth, and constrained. Found ${layout}`\n    )\n    return {\n      sizes: [imgDimensions.width],\n      presentationWidth: imgDimensions.width,\n      presentationHeight: imgDimensions.height,\n      aspectRatio: imgDimensions.width / imgDimensions.height,\n      unscaledWidth: imgDimensions.width,\n    }\n  }\n}\nexport function fixedImageSizes({\n  filename,\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  reporter = { warn },\n}: IImageSizeArgs): IImageSizes {\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  if (!width) {\n    if (!height) {\n      width = DEFAULT_FIXED_WIDTH\n    } else {\n      width = Math.round(height * aspectRatio)\n    }\n  } else if (!height) {\n    height = Math.round(width / aspectRatio)\n  }\n\n  const originalWidth = width // will use this for presentationWidth, don't want to lose it\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n\n  // If the image is smaller than requested, warn the user that it's being processed as such\n  // print out this message with the necessary information before we overwrite it for sizing\n  if (isTopSizeOverriden) {\n    const fixedDimension = imgDimensions.width < width ? `width` : `height`\n    reporter.warn(`\nThe requested ${fixedDimension} \"${\n      fixedDimension === `width` ? width : height\n    }px\" for the image ${filename} was larger than the actual image ${fixedDimension} of ${\n      imgDimensions[fixedDimension]\n    }px. If possible, replace the current image with a larger one.`)\n\n    if (fixedDimension === `width`) {\n      width = imgDimensions.width\n      height = Math.round(width / aspectRatio)\n    } else {\n      height = imgDimensions.height\n      width = height * aspectRatio\n    }\n  }\n\n  const sizes = densities\n    .filter(size => size >= 1) // remove smaller densities because fixed images don't need them\n    .map(density => Math.round(density * (width as number)))\n    .filter(size => size <= imgDimensions.width)\n\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function responsiveImageSizes({\n  sourceMetadata: imgDimensions,\n  width,\n  height,\n  fit = `cover`,\n  outputPixelDensities = DEFAULT_PIXEL_DENSITIES,\n  breakpoints,\n  layout,\n}: IImageSizeArgs): IImageSizes {\n  let sizes\n  let aspectRatio = imgDimensions.width / imgDimensions.height\n  // Sort, dedupe and ensure there's a 1\n  const densities = dedupeAndSortDensities(outputPixelDensities)\n\n  // If both are provided then we need to check the fit\n  if (width && height) {\n    const calculated = getDimensionsAndAspectRatio(imgDimensions, {\n      width,\n      height,\n      fit,\n    })\n    width = calculated.width\n    height = calculated.height\n    aspectRatio = calculated.aspectRatio\n  }\n\n  // Case 1: width of height were passed in, make sure it isn't larger than the actual image\n  width = width && Math.min(width, imgDimensions.width)\n  height = height && Math.min(height, imgDimensions.height)\n\n  // Case 2: neither width or height were passed in, use default size\n  if (!width && !height) {\n    width = Math.min(DEFAULT_FLUID_WIDTH, imgDimensions.width)\n    height = width / aspectRatio\n  }\n\n  // if it still hasn't been found, calculate width from the derived height.\n  // TS isn't smart enough to realise the type for height has been narrowed here\n  if (!width) {\n    width = (height as number) * aspectRatio\n  }\n\n  const originalWidth = width\n  const isTopSizeOverriden =\n    imgDimensions.width < width || imgDimensions.height < (height as number)\n  if (isTopSizeOverriden) {\n    width = imgDimensions.width\n    height = imgDimensions.height\n  }\n\n  width = Math.round(width)\n\n  if (breakpoints?.length > 0) {\n    sizes = breakpoints.filter(size => size <= imgDimensions.width)\n\n    // If a larger breakpoint has been filtered-out, add the actual image width instead\n    if (\n      sizes.length < breakpoints.length &&\n      !sizes.includes(imgDimensions.width)\n    ) {\n      sizes.push(imgDimensions.width)\n    }\n  } else {\n    sizes = densities.map(density => Math.round(density * (width as number)))\n    sizes = sizes.filter(size => size <= imgDimensions.width)\n  }\n\n  // ensure that the size passed in is included in the final output\n  if (layout === `constrained` && !sizes.includes(width)) {\n    sizes.push(width)\n  }\n  sizes = sizes.sort(sortNumeric)\n  return {\n    sizes,\n    aspectRatio,\n    presentationWidth: originalWidth,\n    presentationHeight: Math.round(originalWidth / aspectRatio),\n    unscaledWidth: width,\n  }\n}\n\nexport function getDimensionsAndAspectRatio(\n  dimensions,\n  options\n): { width: number; height: number; aspectRatio: number } {\n  // Calculate the eventual width/height of the image.\n  const imageAspectRatio = dimensions.width / dimensions.height\n\n  let width = options.width\n  let height = options.height\n\n  switch (options.fit) {\n    case `fill`: {\n      width = options.width ? options.width : dimensions.width\n      height = options.height ? options.height : dimensions.height\n      break\n    }\n    case `inside`: {\n      const widthOption = options.width\n        ? options.width\n        : Number.MAX_SAFE_INTEGER\n      const heightOption = options.height\n        ? options.height\n        : Number.MAX_SAFE_INTEGER\n\n      width = Math.min(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.min(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n    case `outside`: {\n      const widthOption = options.width ? options.width : 0\n      const heightOption = options.height ? options.height : 0\n\n      width = Math.max(widthOption, Math.round(heightOption * imageAspectRatio))\n      height = Math.max(\n        heightOption,\n        Math.round(widthOption / imageAspectRatio)\n      )\n      break\n    }\n\n    default: {\n      if (options.width && !options.height) {\n        width = options.width\n        height = Math.round(options.width / imageAspectRatio)\n      }\n\n      if (options.height && !options.width) {\n        width = Math.round(options.height * imageAspectRatio)\n        height = options.height\n      }\n    }\n  }\n\n  return {\n    width,\n    height,\n    aspectRatio: width / height,\n  }\n}\n","/* global GATSBY___IMAGE */\nimport { generateImageData, EVERY_BREAKPOINT } from \"../image-utils\"\nimport type { CSSProperties, HTMLAttributes, ImgHTMLAttributes } from \"react\"\nimport type { Node } from \"gatsby\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { IGatsbyImageData } from \"./gatsby-image.browser\"\nimport type {\n  IGatsbyImageHelperArgs,\n  Layout,\n  IImage,\n  ImageFormat,\n} from \"../image-utils\"\n\n// Native lazy-loading support: https://addyosmani.com/blog/lazy-loading/\nexport const hasNativeLazyLoadSupport = (): boolean =>\n  typeof HTMLImageElement !== `undefined` &&\n  `loading` in HTMLImageElement.prototype\n\nexport function gatsbyImageIsInstalled(): boolean {\n  return typeof GATSBY___IMAGE !== `undefined` && GATSBY___IMAGE\n}\n\nexport type IGatsbyImageDataParent<T = never> = T & {\n  gatsbyImageData: IGatsbyImageData\n}\nexport type IGatsbyImageParent<T = never> = T & {\n  gatsbyImage: IGatsbyImageData\n}\nexport type FileNode = Partial<Node> & {\n  childImageSharp?: IGatsbyImageDataParent<Partial<Node>>\n}\n\nconst isGatsbyImageData = (\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageData | any\n): node is IGatsbyImageData =>\n  // 🦆 check for a deep prop to be sure this is a valid gatsbyImageData object\n  Boolean(node?.images?.fallback?.src)\n\nconst isGatsbyImageDataParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageDataParent<T> | any\n): node is IGatsbyImageDataParent<T> => Boolean(node?.gatsbyImageData)\n\nconst isGatsbyImageParent = <T>(\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  node: IGatsbyImageParent<T> | any\n): node is IGatsbyImageParent<T> => Boolean(node?.gatsbyImage)\n\nexport type ImageDataLike =\n  | FileNode\n  | IGatsbyImageDataParent\n  | IGatsbyImageParent\n  | IGatsbyImageData\n\nexport const getImage = (\n  node: ImageDataLike | null\n): IGatsbyImageData | undefined => {\n  // This checks both for gatsbyImageData and gatsbyImage\n  if (isGatsbyImageData(node)) {\n    return node\n  }\n  // gatsbyImageData GraphQL field\n  if (isGatsbyImageDataParent(node)) {\n    return node.gatsbyImageData\n  }\n  // gatsbyImage GraphQL field for Gatsby's Image CDN service\n  if (isGatsbyImageParent(node)) {\n    return node.gatsbyImage\n  }\n  return node?.childImageSharp?.gatsbyImageData\n}\n\nexport const getSrc = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.src\n\nexport const getSrcSet = (node: ImageDataLike): string | undefined =>\n  getImage(node)?.images?.fallback?.srcSet\n\nexport function getWrapperProps(\n  width: number,\n  height: number,\n  layout: Layout\n): Pick<HTMLAttributes<HTMLElement>, \"className\" | \"style\"> & {\n  \"data-gatsby-image-wrapper\": string\n} {\n  const wrapperStyle: CSSProperties = {}\n\n  let className = `gatsby-image-wrapper`\n\n  // If the plugin isn't installed we need to apply the styles inline\n  if (!gatsbyImageIsInstalled()) {\n    wrapperStyle.position = `relative`\n    wrapperStyle.overflow = `hidden`\n  }\n\n  if (layout === `fixed`) {\n    wrapperStyle.width = width\n    wrapperStyle.height = height\n  } else if (layout === `constrained`) {\n    if (!gatsbyImageIsInstalled()) {\n      wrapperStyle.display = `inline-block`\n      wrapperStyle.verticalAlign = `top`\n    }\n    className = `gatsby-image-wrapper gatsby-image-wrapper-constrained`\n  }\n\n  return {\n    className,\n    \"data-gatsby-image-wrapper\": ``,\n    style: wrapperStyle,\n  }\n}\n\nexport interface IUrlBuilderArgs<OptionsType> {\n  width: number\n  height: number\n  baseUrl: string\n  format: ImageFormat\n  options: OptionsType\n}\nexport interface IGetImageDataArgs<OptionsType = Record<string, unknown>> {\n  baseUrl: string\n  /**\n   * For constrained and fixed images, the size of the image element\n   */\n  width?: number\n  height?: number\n  /**\n   * If available, pass the source image width and height\n   */\n  sourceWidth?: number\n  sourceHeight?: number\n  /**\n   * If only one dimension is passed, then this will be used to calculate the other.\n   */\n  aspectRatio?: number\n  layout?: Layout\n  /**\n   * Returns a URL based on the passed arguments. Should be a pure function\n   */\n  urlBuilder: (args: IUrlBuilderArgs<OptionsType>) => string\n\n  /**\n   * Should be a data URI\n   */\n  placeholderURL?: string\n  backgroundColor?: string\n  /**\n   * Used in error messages etc\n   */\n  pluginName?: string\n\n  /**\n   * If you do not support auto-format, pass an array of image types here\n   */\n  formats?: Array<ImageFormat>\n\n  breakpoints?: Array<number>\n\n  /**\n   * Passed to the urlBuilder function\n   */\n  options?: OptionsType\n}\n\n/**\n * Use this hook to generate gatsby-plugin-image data in the browser.\n */\nexport function getImageData<OptionsType>({\n  baseUrl,\n  urlBuilder,\n  sourceWidth,\n  sourceHeight,\n  pluginName = `getImageData`,\n  formats = [`auto`],\n  breakpoints,\n  options,\n  ...props\n}: IGetImageDataArgs<OptionsType>): IGatsbyImageData {\n  if (\n    !breakpoints?.length &&\n    (props.layout === `fullWidth` || (props.layout as string) === `FULL_WIDTH`)\n  ) {\n    breakpoints = EVERY_BREAKPOINT\n  }\n  const generateImageSource = (\n    baseUrl: string,\n    width: number,\n    height?: number,\n    format?: ImageFormat\n  ): IImage => {\n    return {\n      width,\n      height,\n      format,\n      src: urlBuilder({ baseUrl, width, height, options, format }),\n    }\n  }\n\n  const sourceMetadata: IGatsbyImageHelperArgs[\"sourceMetadata\"] = {\n    width: sourceWidth,\n    height: sourceHeight,\n    format: `auto`,\n  }\n\n  const args: IGatsbyImageHelperArgs = {\n    ...props,\n    pluginName,\n    generateImageSource,\n    filename: baseUrl,\n    formats,\n    breakpoints,\n    sourceMetadata,\n  }\n  return generateImageData(args)\n}\n\nexport function getMainProps(\n  isLoading: boolean,\n  isLoaded: boolean,\n  images: IGatsbyImageData[\"images\"],\n  loading?: \"eager\" | \"lazy\",\n  style: CSSProperties = {}\n): Partial<MainImageProps> {\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      transform: `translateZ(0)`,\n      transition: `opacity 250ms linear`,\n      width: `100%`,\n      willChange: `opacity`,\n      ...style,\n    }\n  }\n\n  const result = {\n    ...images,\n    loading,\n    shouldLoad: isLoading,\n    \"data-main-image\": ``,\n    style: {\n      ...style,\n      opacity: isLoaded ? 1 : 0,\n    },\n  }\n\n  return result\n}\n\nexport type PlaceholderImageAttrs = ImgHTMLAttributes<HTMLImageElement> &\n  Pick<PlaceholderProps, \"sources\" | \"fallback\"> & {\n    \"data-placeholder-image\"?: string\n  }\n\nexport function getPlaceholderProps(\n  placeholder: PlaceholderImageAttrs | undefined,\n  isLoaded: boolean,\n  layout: Layout,\n  width?: number,\n  height?: number,\n  backgroundColor?: string,\n  objectFit?: CSSProperties[\"objectFit\"],\n  objectPosition?: CSSProperties[\"objectPosition\"]\n): PlaceholderImageAttrs {\n  const wrapperStyle: CSSProperties = {}\n\n  if (backgroundColor) {\n    wrapperStyle.backgroundColor = backgroundColor\n\n    if (layout === `fixed`) {\n      wrapperStyle.width = width\n      wrapperStyle.height = height\n      wrapperStyle.backgroundColor = backgroundColor\n      wrapperStyle.position = `relative`\n    } else if (layout === `constrained`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    } else if (layout === `fullWidth`) {\n      wrapperStyle.position = `absolute`\n      wrapperStyle.top = 0\n      wrapperStyle.left = 0\n      wrapperStyle.bottom = 0\n      wrapperStyle.right = 0\n    }\n  }\n\n  if (objectFit) {\n    wrapperStyle.objectFit = objectFit\n  }\n\n  if (objectPosition) {\n    wrapperStyle.objectPosition = objectPosition\n  }\n  const result: PlaceholderImageAttrs = {\n    ...placeholder,\n    \"aria-hidden\": true,\n    \"data-placeholder-image\": ``,\n    style: {\n      opacity: isLoaded ? 0 : 1,\n      transition: `opacity 500ms linear`,\n      ...wrapperStyle,\n    },\n  }\n\n  // fallback when it's not configured in gatsby-config.\n  if (!gatsbyImageIsInstalled()) {\n    result.style = {\n      height: `100%`,\n      left: 0,\n      position: `absolute`,\n      top: 0,\n      width: `100%`,\n    }\n  }\n\n  return result\n}\n\nexport interface IArtDirectedImage {\n  media: string\n  image: IGatsbyImageData\n}\n\n/**\n * Generate a Gatsby image data object with multiple, art-directed images that display at different\n * resolutions.\n *\n * @param defaultImage The image displayed when no media query matches.\n * It is also used for all other settings applied to the image, such as width, height and layout.\n * You should pass a className to the component with media queries to adjust the size of the container,\n * as this cannot be adjusted automatically.\n * @param artDirected Array of objects which each contains a `media` string which is a media query\n * such as `(min-width: 320px)`, and the image object to use when that query matches.\n */\nexport function withArtDirection(\n  defaultImage: IGatsbyImageData,\n  artDirected: Array<IArtDirectedImage>\n): IGatsbyImageData {\n  const { images, placeholder, ...props } = defaultImage\n  const output: IGatsbyImageData = {\n    ...props,\n    images: {\n      ...images,\n      sources: [],\n    },\n    placeholder: placeholder && {\n      ...placeholder,\n      sources: [],\n    },\n  }\n\n  artDirected.forEach(({ media, image }) => {\n    if (!media) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(\n          \"[gatsby-plugin-image] All art-directed images passed to must have a value set for `media`. Skipping.\"\n        )\n      }\n      return\n    }\n\n    if (\n      image.layout !== defaultImage.layout &&\n      process.env.NODE_ENV === `development`\n    ) {\n      console.warn(\n        `[gatsby-plugin-image] Mismatched image layout: expected \"${defaultImage.layout}\" but received \"${image.layout}\". All art-directed images use the same layout as the default image`\n      )\n    }\n\n    output.images.sources.push(\n      ...image.images.sources.map(source => {\n        return { ...source, media }\n      }),\n      {\n        media,\n        srcSet: image.images.fallback.srcSet,\n      }\n    )\n\n    if (!output.placeholder) {\n      return\n    }\n\n    output.placeholder.sources.push({\n      media,\n      srcSet: image.placeholder.fallback,\n    })\n  })\n  output.images.sources.push(...images.sources)\n  if (placeholder?.sources) {\n    output.placeholder?.sources.push(...placeholder.sources)\n  }\n  return output\n}\n","import React, { Fragment, FunctionComponent, PropsWithChildren } from \"react\"\nimport terserMacro from \"../../macros/terser.macro\"\nimport { Layout } from \"../image-utils\"\n\nexport interface ILayoutWrapperProps {\n  layout: Layout\n  width: number\n  height: number\n}\n\nconst NativeScriptLoading: FunctionComponent = () => (\n  <script\n    type=\"module\"\n    dangerouslySetInnerHTML={{\n      __html: terserMacro`\nconst hasNativeLazyLoadSupport = typeof HTMLImageElement !== \"undefined\" && \"loading\" in HTMLImageElement.prototype;\nif (hasNativeLazyLoadSupport) {\n  const gatsbyImages = document.querySelectorAll('img[data-main-image]');\n  for (let mainImage of gatsbyImages) {\n    if (mainImage.dataset.src) {\n      mainImage.setAttribute('src', mainImage.dataset.src)\n      mainImage.removeAttribute('data-src')\n    }\n    if (mainImage.dataset.srcset) {\n      mainImage.setAttribute('srcset', mainImage.dataset.srcset)\n      mainImage.removeAttribute('data-srcset')\n    }\n\n    const sources = mainImage.parentNode.querySelectorAll('source[data-srcset]');\n    for (let source of sources) {\n      source.setAttribute('srcset', source.dataset.srcset)\n      source.removeAttribute('data-srcset')\n    }\n\n    if (mainImage.complete) {\n      mainImage.style.opacity = 1;\n\n      // also hide the placeholder\n      mainImage.parentNode.parentNode.querySelector('[data-placeholder-image]').style.opacity = 0;\n    }\n  }\n}\n`,\n    }}\n  />\n)\n\nexport function getSizer(\n  layout: Layout,\n  width: number,\n  height: number\n): string {\n  let sizer = ``\n  if (layout === `fullWidth`) {\n    sizer = `<div aria-hidden=\"true\" style=\"padding-top: ${\n      (height / width) * 100\n    }%;\"></div>`\n  }\n\n  if (layout === `constrained`) {\n    sizer = `<div style=\"max-width: ${width}px; display: block;\"><img alt=\"\" role=\"presentation\" aria-hidden=\"true\" src=\"data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E\" style=\"max-width: 100%; display: block; position: static;\"></div>`\n  }\n\n  return sizer\n}\n\nconst Sizer: FunctionComponent<ILayoutWrapperProps> = function Sizer({\n  layout,\n  width,\n  height,\n}) {\n  if (layout === `fullWidth`) {\n    return (\n      <div aria-hidden style={{ paddingTop: `${(height / width) * 100}%` }} />\n    )\n  }\n\n  if (layout === `constrained`) {\n    return (\n      <div style={{ maxWidth: width, display: `block` }}>\n        <img\n          alt=\"\"\n          role=\"presentation\"\n          aria-hidden=\"true\"\n          src={`data:image/svg+xml;charset=utf-8,%3Csvg height='${height}' width='${width}' xmlns='http://www.w3.org/2000/svg' version='1.1'%3E%3C/svg%3E`}\n          style={{\n            maxWidth: `100%`,\n            display: `block`,\n            position: `static`,\n          }}\n        />\n      </div>\n    )\n  }\n\n  return null\n}\n\nexport const LayoutWrapper: FunctionComponent<\n  PropsWithChildren<ILayoutWrapperProps>\n> = function LayoutWrapper({ children, ...props }) {\n  return (\n    <Fragment>\n      <Sizer {...props} />\n      {children}\n\n      {SERVER ? <NativeScriptLoading /> : null}\n    </Fragment>\n  )\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\n\nexport interface IResponsiveImageProps {\n  sizes?: string\n  srcSet: string\n}\n\nexport type SourceProps = IResponsiveImageProps &\n  (\n    | {\n        media: string\n        type?: string\n      }\n    | {\n        media?: string\n        type: string\n      }\n  )\n\ntype FallbackProps = { src: string } & Partial<IResponsiveImageProps>\n\ntype ImageProps = ImgHTMLAttributes<HTMLImageElement> & {\n  src: string\n  alt: string\n  shouldLoad: boolean\n}\n\nexport type PictureProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: FallbackProps\n  sources?: Array<SourceProps>\n  alt: string\n  shouldLoad?: boolean\n}\n\nconst Image: FunctionComponent<ImageProps> = function Image({\n  src,\n  srcSet,\n  loading,\n  alt = ``,\n  shouldLoad,\n  ...props\n}) {\n  return (\n    <img\n      {...props}\n      decoding=\"async\"\n      loading={loading}\n      src={shouldLoad ? src : undefined}\n      data-src={!shouldLoad ? src : undefined}\n      srcSet={shouldLoad ? srcSet : undefined}\n      data-srcset={!shouldLoad ? srcSet : undefined}\n      alt={alt}\n    />\n  )\n}\n\nexport const Picture: React.FC<PictureProps> = function Picture({\n  fallback,\n  sources = [],\n  shouldLoad = true,\n  ...props\n}) {\n  const sizes = props.sizes || fallback?.sizes\n  const fallbackImage = (\n    <Image {...props} {...fallback} sizes={sizes} shouldLoad={shouldLoad} />\n  )\n\n  if (!sources.length) {\n    return fallbackImage\n  }\n\n  return (\n    <picture>\n      {sources.map(({ media, srcSet, type }) => (\n        <source\n          key={`${media}-${type}-${srcSet}`}\n          type={type}\n          media={media}\n          srcSet={shouldLoad ? srcSet : undefined}\n          data-srcset={!shouldLoad ? srcSet : undefined}\n          sizes={sizes}\n        />\n      ))}\n      {fallbackImage}\n    </picture>\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string.isRequired,\n  sizes: PropTypes.string,\n  srcSet: PropTypes.string,\n  shouldLoad: PropTypes.bool,\n}\n\nPicture.displayName = `Picture`\nPicture.propTypes = {\n  alt: PropTypes.string.isRequired,\n  shouldLoad: PropTypes.bool,\n  fallback: PropTypes.exact({\n    src: PropTypes.string.isRequired,\n    srcSet: PropTypes.string,\n    sizes: PropTypes.string,\n  }),\n  sources: PropTypes.arrayOf(\n    PropTypes.oneOfType([\n      PropTypes.exact({\n        media: PropTypes.string.isRequired,\n        type: PropTypes.string,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n      PropTypes.exact({\n        media: PropTypes.string,\n        type: PropTypes.string.isRequired,\n        sizes: PropTypes.string,\n        srcSet: PropTypes.string.isRequired,\n      }),\n    ])\n  ),\n}\n","import React, { FunctionComponent, ImgHTMLAttributes } from \"react\"\nimport * as PropTypes from \"prop-types\"\nimport { Picture, SourceProps } from \"./picture\"\n\nexport type PlaceholderProps = ImgHTMLAttributes<HTMLImageElement> & {\n  fallback?: string\n  sources?: Array<SourceProps>\n}\n\nexport const Placeholder: FunctionComponent<PlaceholderProps> =\n  function Placeholder({ fallback, ...props }) {\n    if (fallback) {\n      return (\n        <Picture\n          {...props}\n          fallback={{\n            src: fallback,\n          }}\n          aria-hidden\n          alt=\"\"\n        />\n      )\n    } else {\n      return <div {...props}></div>\n    }\n  }\n\nPlaceholder.displayName = `Placeholder`\nPlaceholder.propTypes = {\n  fallback: PropTypes.string,\n  sources: Picture.propTypes?.sources,\n  alt: function (props, propName, componentName): Error | null {\n    if (!props[propName]) {\n      return null\n    }\n\n    return new Error(\n      `Invalid prop \\`${propName}\\` supplied to \\`${componentName}\\`. Validation failed.`\n    )\n  },\n}\n","import React from \"react\"\nimport { Picture, PictureProps } from \"./picture\"\n\nexport type MainImageProps = PictureProps\n\nexport const MainImage: React.FC<PictureProps> = function MainImage(props) {\n  return (\n    <>\n      <Picture {...props} />\n      <noscript>\n        <Picture {...props} shouldLoad={true} />\n      </noscript>\n    </>\n  )\n}\n\nMainImage.displayName = `MainImage`\nMainImage.propTypes = Picture.propTypes\n","import React from \"react\"\nimport { getWrapperProps, getMainProps, getPlaceholderProps } from \"./hooks\"\nimport { Placeholder } from \"./placeholder\"\nimport { MainImage, MainImageProps } from \"./main-image\"\nimport { LayoutWrapper } from \"./layout-wrapper\"\nimport PropTypes from \"prop-types\"\nimport type { FunctionComponent, WeakValidationMap } from \"react\"\nimport type { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\n\nconst removeNewLines = (str: string): string => str.replace(/\\n/g, ``)\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> =\n  function GatsbyImage({\n    as = `div`,\n    className,\n    class: preactClass,\n    style,\n    image,\n    loading = `lazy`,\n    imgClassName,\n    imgStyle,\n    backgroundColor,\n    objectFit,\n    objectPosition,\n    ...props\n  }) {\n    if (!image) {\n      console.warn(`[gatsby-plugin-image] Missing image prop`)\n      return null\n    }\n\n    if (preactClass) {\n      className = preactClass\n    }\n\n    imgStyle = {\n      objectFit,\n      objectPosition,\n      backgroundColor,\n      ...imgStyle,\n    }\n\n    const {\n      width,\n      height,\n      layout,\n      images,\n      placeholder,\n      backgroundColor: placeholderBackgroundColor,\n    } = image\n\n    const {\n      style: wStyle,\n      className: wClass,\n      ...wrapperProps\n    } = getWrapperProps(width, height, layout)\n\n    const cleanedImages: IGatsbyImageData[\"images\"] = {\n      fallback: undefined,\n      sources: [],\n    }\n    if (images.fallback) {\n      cleanedImages.fallback = {\n        ...images.fallback,\n        srcSet: images.fallback.srcSet\n          ? removeNewLines(images.fallback.srcSet)\n          : undefined,\n      }\n    }\n\n    if (images.sources) {\n      cleanedImages.sources = images.sources.map(source => {\n        return {\n          ...source,\n          srcSet: removeNewLines(source.srcSet),\n        }\n      })\n    }\n\n    return React.createElement(\n      as,\n      {\n        ...wrapperProps,\n        style: {\n          ...wStyle,\n          ...style,\n          backgroundColor,\n        },\n        className: `${wClass}${className ? ` ${className}` : ``}`,\n      },\n      <LayoutWrapper layout={layout} width={width} height={height}>\n        <Placeholder\n          {...getPlaceholderProps(\n            placeholder,\n            false,\n            layout,\n            width,\n            height,\n            placeholderBackgroundColor,\n            objectFit,\n            objectPosition\n          )}\n        />\n\n        <MainImage\n          data-gatsby-image-ssr=\"\"\n          className={imgClassName}\n          {...(props as Omit<\n            MainImageProps,\n            \"images\" | \"fallback\" | \"onError\" | \"onLoad\"\n          >)}\n          // When eager is set we want to start the isLoading state on true (we want to load the img without react)\n          {...getMainProps(\n            loading === `eager`,\n            false,\n            cleanedImages,\n            loading,\n            imgStyle\n          )}\n        />\n      </LayoutWrapper>\n    )\n  }\n\nexport const altValidator: PropTypes.Validator<string> = (\n  props: GatsbyImageProps,\n  propName,\n  componentName,\n  ...rest\n): Error | undefined => {\n  if (!props.alt && props.alt !== ``) {\n    return new Error(\n      `The \"alt\" prop is required in ${componentName}. If the image is purely presentational then pass an empty string: e.g. alt=\"\". Learn more: https://a11y-style-guide.com/style-guide/section-media.html`\n    )\n  }\n\n  return PropTypes.string(props, propName, componentName, ...rest)\n}\n\nexport const propTypes = {\n  image: PropTypes.object.isRequired,\n  alt: altValidator,\n} as WeakValidationMap<GatsbyImageProps>\n","import {\n  createElement,\n  memo,\n  useMemo,\n  useEffect,\n  useLayoutEffect,\n  useRef,\n} from \"react\"\nimport {\n  getWrapperProps,\n  gatsbyImageIsInstalled,\n  hasNativeLazyLoadSupport,\n} from \"./hooks\"\nimport { getSizer } from \"./layout-wrapper\"\nimport { propTypes } from \"./gatsby-image.server\"\nimport type {\n  FC,\n  ElementType,\n  FunctionComponent,\n  ImgHTMLAttributes,\n  CSSProperties,\n  ReactEventHandler,\n} from \"react\"\nimport type { renderImageToString } from \"./lazy-hydrate\"\nimport type { PlaceholderProps } from \"./placeholder\"\nimport type { MainImageProps } from \"./main-image\"\nimport type { Layout } from \"../image-utils\"\n\nconst imageCache = new Set<string>()\nlet renderImageToStringPromise\nlet renderImage: typeof renderImageToString | undefined\n\n// eslint-disable-next-line @typescript-eslint/naming-convention\nexport interface GatsbyImageProps\n  extends Omit<\n    ImgHTMLAttributes<HTMLImageElement>,\n    \"placeholder\" | \"onLoad\" | \"src\" | \"srcSet\" | \"width\" | \"height\"\n  > {\n  alt: string\n  as?: ElementType\n  className?: string\n  class?: string\n  imgClassName?: string\n  image: IGatsbyImageData\n  imgStyle?: CSSProperties\n  backgroundColor?: string\n  objectFit?: CSSProperties[\"objectFit\"]\n  objectPosition?: CSSProperties[\"objectPosition\"]\n  onLoad?: (props: { wasCached: boolean }) => void\n  onError?: ReactEventHandler<HTMLImageElement>\n  onStartLoad?: (props: { wasCached: boolean }) => void\n}\n\nexport interface IGatsbyImageData {\n  layout: Layout\n  width: number\n  height: number\n  backgroundColor?: string\n  images: Pick<MainImageProps, \"sources\" | \"fallback\">\n  placeholder?: Pick<PlaceholderProps, \"sources\" | \"fallback\">\n}\n\nconst GatsbyImageHydrator: FC<GatsbyImageProps> = function GatsbyImageHydrator({\n  as = `div`,\n  image,\n  style,\n  backgroundColor,\n  className,\n  class: preactClass,\n  onStartLoad,\n  onLoad,\n  onError,\n  ...props\n}) {\n  const { width, height, layout } = image\n  const {\n    style: wStyle,\n    className: wClass,\n    ...wrapperProps\n  } = getWrapperProps(width, height, layout)\n  const root = useRef<HTMLElement>()\n  const cacheKey = useMemo(() => JSON.stringify(image.images), [image.images])\n\n  // Preact uses class instead of className so we need to check for both\n  if (preactClass) {\n    className = preactClass\n  }\n\n  const sizer = getSizer(layout, width, height)\n\n  useEffect(() => {\n    if (!renderImageToStringPromise) {\n      renderImageToStringPromise = import(`./lazy-hydrate`).then(\n        ({ renderImageToString, swapPlaceholderImage }) => {\n          renderImage = renderImageToString\n\n          return {\n            renderImageToString,\n            swapPlaceholderImage,\n          }\n        }\n      )\n    }\n\n    // The plugin image component is a bit special where if it's server-side rendered, we add extra script tags to support lazy-loading without\n    // In this case we stop hydration but fire the correct events.\n    const ssrImage = root.current.querySelector(\n      `[data-gatsby-image-ssr]`\n    ) as HTMLImageElement\n    if (ssrImage && hasNativeLazyLoadSupport()) {\n      if (ssrImage.complete) {\n        // Trigger onStartload and onLoad events\n        onStartLoad?.({\n          wasCached: true,\n        })\n        onLoad?.({\n          wasCached: true,\n        })\n\n        // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n        setTimeout(() => {\n          ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n        }, 0)\n      } else {\n        onStartLoad?.({\n          wasCached: true,\n        })\n\n        ssrImage.addEventListener(`load`, function onLoadListener() {\n          ssrImage.removeEventListener(`load`, onLoadListener)\n\n          onLoad?.({\n            wasCached: true,\n          })\n          // remove ssr key for state updates but add delay to not fight with native code snippt of gatsby-ssr\n          setTimeout(() => {\n            ssrImage.removeAttribute(`data-gatsby-image-ssr`)\n          }, 0)\n        })\n      }\n\n      imageCache.add(cacheKey)\n\n      return\n    }\n\n    if (renderImage && imageCache.has(cacheKey)) {\n      return\n    }\n\n    let animationFrame\n    let cleanupCallback\n    renderImageToStringPromise.then(\n      ({ renderImageToString, swapPlaceholderImage }) => {\n        if (!root.current) {\n          return\n        }\n\n        root.current.innerHTML = renderImageToString({\n          isLoading: true,\n          isLoaded: imageCache.has(cacheKey),\n          image,\n          ...props,\n        })\n\n        if (!imageCache.has(cacheKey)) {\n          animationFrame = requestAnimationFrame(() => {\n            if (root.current) {\n              cleanupCallback = swapPlaceholderImage(\n                root.current,\n                cacheKey,\n                imageCache,\n                style,\n                onStartLoad,\n                onLoad,\n                onError\n              )\n            }\n          })\n        }\n      }\n    )\n\n    // eslint-disable-next-line consistent-return\n    return (): void => {\n      if (animationFrame) {\n        cancelAnimationFrame(animationFrame)\n      }\n      if (cleanupCallback) {\n        cleanupCallback()\n      }\n    }\n  }, [image])\n\n  // useLayoutEffect is ran before React commits to the DOM. This allows us to make sure our HTML is using our cached image version\n  useLayoutEffect(() => {\n    if (imageCache.has(cacheKey) && renderImage) {\n      root.current.innerHTML = renderImage({\n        isLoading: imageCache.has(cacheKey),\n        isLoaded: imageCache.has(cacheKey),\n        image,\n        ...props,\n      })\n\n      // Trigger onStartload and onLoad events\n      onStartLoad?.({\n        wasCached: true,\n      })\n      onLoad?.({\n        wasCached: true,\n      })\n    }\n  }, [image])\n\n  // By keeping all props equal React will keep the component in the DOM\n  return createElement(as, {\n    ...wrapperProps,\n    style: {\n      ...wStyle,\n      ...style,\n      backgroundColor,\n    },\n    className: `${wClass}${className ? ` ${className}` : ``}`,\n    ref: root,\n    dangerouslySetInnerHTML: {\n      __html: sizer,\n    },\n    suppressHydrationWarning: true,\n  })\n}\n\nexport const GatsbyImage: FunctionComponent<GatsbyImageProps> = memo(\n  function GatsbyImage(props) {\n    if (!props.image) {\n      if (process.env.NODE_ENV === `development`) {\n        console.warn(`[gatsby-plugin-image] Missing image prop`)\n      }\n\n      return null\n    }\n\n    if (!gatsbyImageIsInstalled() && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `[gatsby-plugin-image] You're missing out on some cool performance features. Please add \"gatsby-plugin-image\" to your gatsby-config.js`\n      )\n    }\n\n    return createElement(GatsbyImageHydrator, props)\n  }\n)\n\nGatsbyImage.propTypes = propTypes\nGatsbyImage.displayName = `GatsbyImage`\n","import React, { FunctionComponent, ReactElement } from \"react\"\nimport {\n  altValidator,\n  GatsbyImage as GatsbyImageServer,\n} from \"./gatsby-image.server\"\nimport { GatsbyImageProps, IGatsbyImageData } from \"./gatsby-image.browser\"\nimport PropTypes from \"prop-types\"\nimport { ISharpGatsbyImageArgs } from \"../image-utils\"\n\nexport interface IStaticImageProps\n  extends Omit<GatsbyImageProps, \"image\">,\n    Omit<ISharpGatsbyImageArgs, \"backgroundColor\"> {\n  src: string\n  filename?: string\n}\n\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nexport function _getStaticImage(\n  GatsbyImage: FunctionComponent<GatsbyImageProps>\n): React.FC<IStaticImageProps & IPrivateProps> {\n  return function StaticImage({\n    src,\n    __imageData: imageData,\n    __error,\n    // We extract these because they're not meant to be passed-down to GatsbyImage\n    /* eslint-disable @typescript-eslint/no-unused-vars */\n    width,\n    height,\n    aspectRatio,\n    tracedSVGOptions,\n    placeholder,\n    formats,\n    quality,\n    transformOptions,\n    jpgOptions,\n    pngOptions,\n    webpOptions,\n    avifOptions,\n    blurredOptions,\n    breakpoints,\n    outputPixelDensities,\n    /* eslint-enable @typescript-eslint/no-unused-vars */\n    ...props\n  }): ReactElement {\n    if (__error) {\n      console.warn(__error)\n    }\n\n    if (imageData) {\n      return <GatsbyImage image={imageData} {...props} />\n    }\n    console.warn(`Image not loaded`, src)\n    if (!__error && process.env.NODE_ENV === `development`) {\n      console.warn(\n        `Please ensure that \"gatsby-plugin-image\" is included in the plugins array in gatsby-config.js, and that your version of gatsby is at least 2.24.78`\n      )\n    }\n    return null\n  }\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageServer)\n\nconst checkDimensionProps: PropTypes.Validator<number> = (\n  props: IStaticImageProps & IPrivateProps,\n  propName: keyof IStaticImageProps & IPrivateProps,\n  ...rest\n) => {\n  if (\n    props.layout === `fullWidth` &&\n    (propName === `width` || propName === `height`) &&\n    props[propName]\n  ) {\n    return new Error(\n      `\"${propName}\" ${props[propName]} may not be passed when layout is fullWidth.`\n    )\n  }\n  return PropTypes.number(props, propName, ...rest)\n}\n\nconst validLayouts = new Set([`fixed`, `fullWidth`, `constrained`])\n\nexport const propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: altValidator,\n  width: checkDimensionProps,\n  height: checkDimensionProps,\n  sizes: PropTypes.string,\n  layout: (props: IStaticImageProps & IPrivateProps): Error | undefined => {\n    if (props.layout === undefined) {\n      return undefined\n    }\n    if (validLayouts.has(props.layout)) {\n      return undefined\n    }\n\n    return new Error(\n      `Invalid value ${props.layout}\" provided for prop \"layout\". Defaulting to \"constrained\". Valid values are \"fixed\", \"fullWidth\" or \"constrained\".`\n    )\n  },\n}\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","import {\n  GatsbyImage as GatsbyImageBrowser,\n  IGatsbyImageData,\n} from \"./gatsby-image.browser\"\nimport React from \"react\"\nimport {\n  _getStaticImage,\n  propTypes,\n  IStaticImageProps,\n} from \"./static-image.server\"\n// These values are added by Babel. Do not add them manually\ninterface IPrivateProps {\n  __imageData?: IGatsbyImageData\n  __error?: string\n}\n\nconst StaticImage: React.FC<IStaticImageProps & IPrivateProps> =\n  _getStaticImage(GatsbyImageBrowser)\n\nStaticImage.displayName = `StaticImage`\nStaticImage.propTypes = propTypes\n\nexport { StaticImage }\n","'use strict';\n\nconst preserveCamelCase = string => {\n\tlet isLastCharLower = false;\n\tlet isLastCharUpper = false;\n\tlet isLastLastCharUpper = false;\n\n\tfor (let i = 0; i < string.length; i++) {\n\t\tconst character = string[i];\n\n\t\tif (isLastCharLower && /[a-zA-Z]/.test(character) && character.toUpperCase() === character) {\n\t\t\tstring = string.slice(0, i) + '-' + string.slice(i);\n\t\t\tisLastCharLower = false;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = true;\n\t\t\ti++;\n\t\t} else if (isLastCharUpper && isLastLastCharUpper && /[a-zA-Z]/.test(character) && character.toLowerCase() === character) {\n\t\t\tstring = string.slice(0, i - 1) + '-' + string.slice(i - 1);\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = false;\n\t\t\tisLastCharLower = true;\n\t\t} else {\n\t\t\tisLastCharLower = character.toLowerCase() === character && character.toUpperCase() !== character;\n\t\t\tisLastLastCharUpper = isLastCharUpper;\n\t\t\tisLastCharUpper = character.toUpperCase() === character && character.toLowerCase() !== character;\n\t\t}\n\t}\n\n\treturn string;\n};\n\nconst camelCase = (input, options) => {\n\tif (!(typeof input === 'string' || Array.isArray(input))) {\n\t\tthrow new TypeError('Expected the input to be `string | string[]`');\n\t}\n\n\toptions = Object.assign({\n\t\tpascalCase: false\n\t}, options);\n\n\tconst postProcess = x => options.pascalCase ? x.charAt(0).toUpperCase() + x.slice(1) : x;\n\n\tif (Array.isArray(input)) {\n\t\tinput = input.map(x => x.trim())\n\t\t\t.filter(x => x.length)\n\t\t\t.join('-');\n\t} else {\n\t\tinput = input.trim();\n\t}\n\n\tif (input.length === 0) {\n\t\treturn '';\n\t}\n\n\tif (input.length === 1) {\n\t\treturn options.pascalCase ? input.toUpperCase() : input.toLowerCase();\n\t}\n\n\tconst hasUpperCase = input !== input.toLowerCase();\n\n\tif (hasUpperCase) {\n\t\tinput = preserveCamelCase(input);\n\t}\n\n\tinput = input\n\t\t.replace(/^[_.\\- ]+/, '')\n\t\t.toLowerCase()\n\t\t.replace(/[_.\\- ]+(\\w|$)/g, (_, p1) => p1.toUpperCase())\n\t\t.replace(/\\d+(\\w|$)/g, m => m.toUpperCase());\n\n\treturn postProcess(input);\n};\n\nmodule.exports = camelCase;\n// TODO: Remove this for the next major release\nmodule.exports.default = camelCase;\n","import React from 'react'\nimport { GatsbyImage } from 'gatsby-plugin-image'\nimport { useStaticQuery, graphql } from 'gatsby'\n\n/**\n * Image\n *\n * @param {string} src 画像のURL\n * @param {string} alt 画像の説明\n * @return {JSX.Element}\n */\nconst Image = ({ src, alt = '' }) => {\n  const data = useStaticQuery(graphql`\n    query {\n      allFile(filter: { sourceInstanceName: { eq: \"attachments\" } }) {\n        edges {\n          node {\n            id\n            childImageSharp {\n              gatsbyImageData(layout: FULL_WIDTH)\n            }\n          }\n        }\n      }\n    }\n  `)\n\n  // 画像リストの中から、コンポーネント引数で指定したURLの画像を抽出.\n  const targetEdge = data.allFile.edges.find(edge => edge.node.id === src)\n\n  // 画像が取得できた場合のみgatsby-imageのコンポーネントを返却.\n  return (\n    targetEdge?.node.childImageSharp && (\n      <GatsbyImage\n        image={targetEdge.node.childImageSharp.gatsbyImageData}\n        alt={alt}\n      />\n    )\n  )\n}\n\nexport default Image\n","// extracted by mini-css-extract-plugin\nexport default {\"product\":\"product-single-module--product--505b7\",\"product__entry__container\":\"product-single-module--product__entry__container--a6d84\",\"product__entry__container__primary\":\"product-single-module--product__entry__container__primary--f7f21\",\"product__entry__container__secondary\":\"product-single-module--product__entry__container__secondary--066b0\",\"product__primary\":\"product-single-module--product__primary--72f90\",\"product__primary__header__title\":\"product-single-module--product__primary__header__title--8cec0\",\"product__primary__header__title__link\":\"product-single-module--product__primary__header__title__link--a81a6\",\"product__primary__header__date\":\"product-single-module--product__primary__header__date--d1930\",\"product__primary__header__date__preview\":\"product-single-module--product__primary__header__date__preview--f7144\",\"product__primary__categories\":\"product-single-module--product__primary__categories--84af7\",\"product__primary__categories__return\":\"product-single-module--product__primary__categories__return--6e137\",\"product__primary__categories__category\":\"product-single-module--product__primary__categories__category--86729\",\"product__primary__tags\":\"product-single-module--product__primary__tags--f1ced\",\"product__primary__tags__tag\":\"product-single-module--product__primary__tags__tag--73b20\",\"product__primary__content\":\"product-single-module--product__primary__content--cdabb\",\"product__primary__navi\":\"product-single-module--product__primary__navi--53f68\",\"product__primary__navi__list\":\"product-single-module--product__primary__navi__list--40377\",\"product__primary__navi__list__item\":\"product-single-module--product__primary__navi__list__item--0d635\",\"product__primary__attachments\":\"product-single-module--product__primary__attachments--6b03b\",\"product__primary__attachmentsLarge\":\"product-single-module--product__primary__attachments--large--5bb71\",\"product__primary__attachmentsSmall\":\"product-single-module--product__primary__attachments--small--6f2e1\",\"product__primary__attachments__attachment\":\"product-single-module--product__primary__attachments__attachment--1af9b\",\"product__primary__attachments__attachment__link\":\"product-single-module--product__primary__attachments__attachment__link--9fa62\",\"product__secondary\":\"product-single-module--product__secondary--e9cbf\",\"product__secondary__feature\":\"product-single-module--product__secondary__feature--3fa66\"};","import React from 'react'\nimport { useStaticQuery, graphql, Link } from 'gatsby'\nimport { GatsbyImage } from 'gatsby-plugin-image'\n\n/**\n * 作成者\n *\n * @return {JSX.Element}\n */\nconst Bio = () => {\n  const data = useStaticQuery(graphql`\n    query BioQuery {\n      avatar: file(absolutePath: { regex: \"/avatar.png/\" }) {\n        childImageSharp {\n          gatsbyImageData(layout: FULL_WIDTH)\n        }\n      }\n      site {\n        siteMetadata {\n          author {\n            name\n            summary\n          }\n        }\n      }\n    }\n  `)\n\n  const { author } = data.site.siteMetadata\n  return (\n    <div\n      style={{\n        display: `flex`,\n        margin: `calc(1rem / 2) calc(1rem / -4)`,\n      }}\n    >\n      <div\n        style={{\n          marginRight: `calc(1rem / 4)`,\n          flexBasic: `70px`,\n          width: `70px`,\n          height: `70px`,\n          clipPath: `circle(30px at 50% 45%)`,\n        }}\n      >\n        <GatsbyImage\n          image={data.avatar.childImageSharp.gatsbyImageData}\n          alt={author.name}\n          style={{\n            display: `block`,\n            width: `100%`,\n            height: `100%`,\n          }}\n        />\n      </div>\n      <div style={{ flex: `1`, fontSize: `0.875rem` }}>\n        <strong>{author.name}</strong>{' '}\n        <span style={{ display: 'inline-block' }}>{author.summary}</span>\n        <br />\n        <Link to={`/about`}>&rarr; Read about me.</Link>\n      </div>\n    </div>\n  )\n}\n\nexport default Bio\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Box, LinearProgress } from '@mui/material'\n\nconst StyledDropback = styled(Box)`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 100;\n  background: rgba(0, 0, 0, 0.1);\n`\n\nconst StyledLinear = styled(Box)`\n  position: absolute;\n  top: calc(50% - 2px);\n  left: 1rem;\n  width: calc(100% - 2rem);\n  border-radius: 3px;\n  overflow: hidden;\n  box-shadow: 0 0 1px rgba(0, 0, 0, 0.8);\n`\nconst StyledLinearProgress = styled(LinearProgress)`\n  height: 3px;\n  background: #fff;\n\n  .MuiLinearProgress-bar {\n    background: #26a69a;\n  }\n`\n/**\n * LinearIndeterminate\n *\n * @return {JSX.Element}\n */\nconst LinearIndeterminate = () => {\n  return (\n    <StyledDropback>\n      <StyledLinear>\n        <StyledLinearProgress />\n      </StyledLinear>\n    </StyledDropback>\n  )\n}\nexport default LinearIndeterminate\n","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"component\", \"direction\", \"spacing\", \"divider\", \"children\"];\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport { createUnarySpacing, getValue, handleBreakpoints, mergeBreakpointsInOrder, unstable_extendSxProp as extendSxProp, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { deepmerge } from '@mui/utils';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\n\n/**\n * Return an array with the separator React element interspersed between\n * each React node of the input children.\n *\n * > joinChildren([1,2,3], 0)\n * [1,0,2,0,3]\n */\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction joinChildren(children, separator) {\n  const childrenArray = React.Children.toArray(children).filter(Boolean);\n  return childrenArray.reduce((output, child, index) => {\n    output.push(child);\n    if (index < childrenArray.length - 1) {\n      output.push( /*#__PURE__*/React.cloneElement(separator, {\n        key: `separator-${index}`\n      }));\n    }\n    return output;\n  }, []);\n}\nconst getSideFromDirection = direction => {\n  return {\n    row: 'Left',\n    'row-reverse': 'Right',\n    column: 'Top',\n    'column-reverse': 'Bottom'\n  }[direction];\n};\nexport const style = ({\n  ownerState,\n  theme\n}) => {\n  let styles = _extends({\n    display: 'flex',\n    flexDirection: 'column'\n  }, handleBreakpoints({\n    theme\n  }, resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  }), propValue => ({\n    flexDirection: propValue\n  })));\n  if (ownerState.spacing) {\n    const transformer = createUnarySpacing(theme);\n    const base = Object.keys(theme.breakpoints.values).reduce((acc, breakpoint) => {\n      if (typeof ownerState.spacing === 'object' && ownerState.spacing[breakpoint] != null || typeof ownerState.direction === 'object' && ownerState.direction[breakpoint] != null) {\n        acc[breakpoint] = true;\n      }\n      return acc;\n    }, {});\n    const directionValues = resolveBreakpointValues({\n      values: ownerState.direction,\n      base\n    });\n    const spacingValues = resolveBreakpointValues({\n      values: ownerState.spacing,\n      base\n    });\n    if (typeof directionValues === 'object') {\n      Object.keys(directionValues).forEach((breakpoint, index, breakpoints) => {\n        const directionValue = directionValues[breakpoint];\n        if (!directionValue) {\n          const previousDirectionValue = index > 0 ? directionValues[breakpoints[index - 1]] : 'column';\n          directionValues[breakpoint] = previousDirectionValue;\n        }\n      });\n    }\n    const styleFromPropValue = (propValue, breakpoint) => {\n      return {\n        '& > :not(style) + :not(style)': {\n          margin: 0,\n          [`margin${getSideFromDirection(breakpoint ? directionValues[breakpoint] : ownerState.direction)}`]: getValue(transformer, propValue)\n        }\n      };\n    };\n    styles = deepmerge(styles, handleBreakpoints({\n      theme\n    }, spacingValues, styleFromPropValue));\n  }\n  styles = mergeBreakpointsInOrder(theme.breakpoints, styles);\n  return styles;\n};\nconst StackRoot = styled('div', {\n  name: 'MuiStack',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    return [styles.root];\n  }\n})(style);\nconst Stack = /*#__PURE__*/React.forwardRef(function Stack(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiStack'\n  });\n  const props = extendSxProp(themeProps);\n  const {\n      component = 'div',\n      direction = 'column',\n      spacing = 0,\n      divider,\n      children\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = {\n    direction,\n    spacing\n  };\n  return /*#__PURE__*/_jsx(StackRoot, _extends({\n    as: component,\n    ownerState: ownerState,\n    ref: ref\n  }, other, {\n    children: divider ? joinChildren(children, divider) : children\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Stack.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'column'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * Add an element between each child.\n   */\n  divider: PropTypes.node,\n  /**\n   * Defines the space between immediate children.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop, which allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Stack;","export function isUnitless(value) {\n  return String(parseFloat(value)).length === String(value).length;\n}\n\n// Ported from Compass\n// https://github.com/Compass/compass/blob/master/core/stylesheets/compass/typography/_units.scss\n// Emulate the sass function \"unit\"\nexport function getUnit(input) {\n  return String(input).match(/[\\d.\\-+]*\\s*(.*)/)[1] || '';\n}\n\n// Emulate the sass function \"unitless\"\nexport function toUnitless(length) {\n  return parseFloat(length);\n}\n\n// Convert any CSS <length> or <percentage> value to any another.\n// From https://github.com/KyleAMathews/convert-css-length\nexport function convertLength(baseFontSize) {\n  return (length, toUnit) => {\n    const fromUnit = getUnit(length);\n\n    // Optimize for cases where `from` and `to` units are accidentally the same.\n    if (fromUnit === toUnit) {\n      return length;\n    }\n\n    // Convert input length to pixels.\n    let pxLength = toUnitless(length);\n    if (fromUnit !== 'px') {\n      if (fromUnit === 'em') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      } else if (fromUnit === 'rem') {\n        pxLength = toUnitless(length) * toUnitless(baseFontSize);\n      }\n    }\n\n    // Convert length in pixels to the output unit\n    let outputLength = pxLength;\n    if (toUnit !== 'px') {\n      if (toUnit === 'em') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else if (toUnit === 'rem') {\n        outputLength = pxLength / toUnitless(baseFontSize);\n      } else {\n        return length;\n      }\n    }\n    return parseFloat(outputLength.toFixed(5)) + toUnit;\n  };\n}\nexport function alignProperty({\n  size,\n  grid\n}) {\n  const sizeBelow = size - size % grid;\n  const sizeAbove = sizeBelow + grid;\n  return size - sizeBelow < sizeAbove - size ? sizeBelow : sizeAbove;\n}\n\n// fontGrid finds a minimal grid (in rem) for the fontSize values so that the\n// lineHeight falls under a x pixels grid, 4px in the case of Material Design,\n// without changing the relative line height\nexport function fontGrid({\n  lineHeight,\n  pixels,\n  htmlFontSize\n}) {\n  return pixels / (lineHeight * htmlFontSize);\n}\n\n/**\n * generate a responsive version of a given CSS property\n * @example\n * responsiveProperty({\n *   cssProperty: 'fontSize',\n *   min: 15,\n *   max: 20,\n *   unit: 'px',\n *   breakpoints: [300, 600],\n * })\n *\n * // this returns\n *\n * {\n *   fontSize: '15px',\n *   '@media (min-width:300px)': {\n *     fontSize: '17.5px',\n *   },\n *   '@media (min-width:600px)': {\n *     fontSize: '20px',\n *   },\n * }\n * @param {Object} params\n * @param {string} params.cssProperty - The CSS property to be made responsive\n * @param {number} params.min - The smallest value of the CSS property\n * @param {number} params.max - The largest value of the CSS property\n * @param {string} [params.unit] - The unit to be used for the CSS property\n * @param {Array.number} [params.breakpoints]  - An array of breakpoints\n * @param {number} [params.alignStep] - Round scaled value to fall under this grid\n * @returns {Object} responsive styles for {params.cssProperty}\n */\nexport function responsiveProperty({\n  cssProperty,\n  min,\n  max,\n  unit = 'rem',\n  breakpoints = [600, 900, 1200],\n  transform = null\n}) {\n  const output = {\n    [cssProperty]: `${min}${unit}`\n  };\n  const factor = (max - min) / breakpoints[breakpoints.length - 1];\n  breakpoints.forEach(breakpoint => {\n    let value = min + factor * breakpoint;\n    if (transform !== null) {\n      value = transform(value);\n    }\n    output[`@media (min-width:${breakpoint}px)`] = {\n      [cssProperty]: `${Math.round(value * 10000) / 10000}${unit}`\n    };\n  });\n  return output;\n}","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getSkeletonUtilityClass(slot) {\n  return generateUtilityClass('MuiSkeleton', slot);\n}\nconst skeletonClasses = generateUtilityClasses('MuiSkeleton', ['root', 'text', 'rectangular', 'rounded', 'circular', 'pulse', 'wave', 'withChildren', 'fitContent', 'heightAuto']);\nexport default skeletonClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"animation\", \"className\", \"component\", \"height\", \"style\", \"variant\", \"width\"];\nlet _ = t => t,\n  _t,\n  _t2,\n  _t3,\n  _t4;\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { keyframes, css } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport { alpha, unstable_getUnit as getUnit, unstable_toUnitless as toUnitless } from '../styles';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport { getSkeletonUtilityClass } from './skeletonClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    variant,\n    animation,\n    hasChildren,\n    width,\n    height\n  } = ownerState;\n  const slots = {\n    root: ['root', variant, animation, hasChildren && 'withChildren', hasChildren && !width && 'fitContent', hasChildren && !height && 'heightAuto']\n  };\n  return composeClasses(slots, getSkeletonUtilityClass, classes);\n};\nconst pulseKeyframe = keyframes(_t || (_t = _`\n  0% {\n    opacity: 1;\n  }\n\n  50% {\n    opacity: 0.4;\n  }\n\n  100% {\n    opacity: 1;\n  }\n`));\nconst waveKeyframe = keyframes(_t2 || (_t2 = _`\n  0% {\n    transform: translateX(-100%);\n  }\n\n  50% {\n    /* +0.5s of delay between each loop */\n    transform: translateX(100%);\n  }\n\n  100% {\n    transform: translateX(100%);\n  }\n`));\nconst SkeletonRoot = styled('span', {\n  name: 'MuiSkeleton',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, styles[ownerState.variant], ownerState.animation !== false && styles[ownerState.animation], ownerState.hasChildren && styles.withChildren, ownerState.hasChildren && !ownerState.width && styles.fitContent, ownerState.hasChildren && !ownerState.height && styles.heightAuto];\n  }\n})(({\n  theme,\n  ownerState\n}) => {\n  const radiusUnit = getUnit(theme.shape.borderRadius) || 'px';\n  const radiusValue = toUnitless(theme.shape.borderRadius);\n  return _extends({\n    display: 'block',\n    // Create a \"on paper\" color with sufficient contrast retaining the color\n    backgroundColor: theme.vars ? theme.vars.palette.Skeleton.bg : alpha(theme.palette.text.primary, theme.palette.mode === 'light' ? 0.11 : 0.13),\n    height: '1.2em'\n  }, ownerState.variant === 'text' && {\n    marginTop: 0,\n    marginBottom: 0,\n    height: 'auto',\n    transformOrigin: '0 55%',\n    transform: 'scale(1, 0.60)',\n    borderRadius: `${radiusValue}${radiusUnit}/${Math.round(radiusValue / 0.6 * 10) / 10}${radiusUnit}`,\n    '&:empty:before': {\n      content: '\"\\\\00a0\"'\n    }\n  }, ownerState.variant === 'circular' && {\n    borderRadius: '50%'\n  }, ownerState.variant === 'rounded' && {\n    borderRadius: (theme.vars || theme).shape.borderRadius\n  }, ownerState.hasChildren && {\n    '& > *': {\n      visibility: 'hidden'\n    }\n  }, ownerState.hasChildren && !ownerState.width && {\n    maxWidth: 'fit-content'\n  }, ownerState.hasChildren && !ownerState.height && {\n    height: 'auto'\n  });\n}, ({\n  ownerState\n}) => ownerState.animation === 'pulse' && css(_t3 || (_t3 = _`\n      animation: ${0} 1.5s ease-in-out 0.5s infinite;\n    `), pulseKeyframe), ({\n  ownerState,\n  theme\n}) => ownerState.animation === 'wave' && css(_t4 || (_t4 = _`\n      position: relative;\n      overflow: hidden;\n\n      /* Fix bug in Safari https://bugs.webkit.org/show_bug.cgi?id=68196 */\n      -webkit-mask-image: -webkit-radial-gradient(white, black);\n\n      &::after {\n        animation: ${0} 1.6s linear 0.5s infinite;\n        background: linear-gradient(\n          90deg,\n          transparent,\n          ${0},\n          transparent\n        );\n        content: '';\n        position: absolute;\n        transform: translateX(-100%); /* Avoid flash during server-side hydration */\n        bottom: 0;\n        left: 0;\n        right: 0;\n        top: 0;\n      }\n    `), waveKeyframe, (theme.vars || theme).palette.action.hover));\nconst Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(inProps, ref) {\n  const props = useThemeProps({\n    props: inProps,\n    name: 'MuiSkeleton'\n  });\n  const {\n      animation = 'pulse',\n      className,\n      component = 'span',\n      height,\n      style,\n      variant = 'text',\n      width\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const ownerState = _extends({}, props, {\n    animation,\n    component,\n    variant,\n    hasChildren: Boolean(other.children)\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(SkeletonRoot, _extends({\n    as: component,\n    ref: ref,\n    className: clsx(classes.root, className),\n    ownerState: ownerState\n  }, other, {\n    style: _extends({\n      width,\n      height\n    }, style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   * @default 'pulse'\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  /**\n   * @ignore\n   */\n  style: PropTypes.object,\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * The type of content that will be rendered.\n   * @default 'text'\n   */\n  variant: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([PropTypes.oneOf(['circular', 'rectangular', 'rounded', 'text']), PropTypes.string]),\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default Skeleton;","import * as React from 'react';\n\n/**\n * @ignore - internal component.\n */\nconst GridContext = /*#__PURE__*/React.createContext();\nif (process.env.NODE_ENV !== 'production') {\n  GridContext.displayName = 'GridContext';\n}\nexport default GridContext;","import { unstable_generateUtilityClasses as generateUtilityClasses } from '@mui/utils';\nimport generateUtilityClass from '../generateUtilityClass';\nexport function getGridUtilityClass(slot) {\n  return generateUtilityClass('MuiGrid', slot);\n}\nconst SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nconst DIRECTIONS = ['column-reverse', 'column', 'row-reverse', 'row'];\nconst WRAPS = ['nowrap', 'wrap-reverse', 'wrap'];\nconst GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\nconst gridClasses = generateUtilityClasses('MuiGrid', ['root', 'container', 'item', 'zeroMinWidth',\n// spacings\n...SPACINGS.map(spacing => `spacing-xs-${spacing}`),\n// direction values\n...DIRECTIONS.map(direction => `direction-xs-${direction}`),\n// wrap values\n...WRAPS.map(wrap => `wrap-xs-${wrap}`),\n// grid sizes for all breakpoints\n...GRID_SIZES.map(size => `grid-xs-${size}`), ...GRID_SIZES.map(size => `grid-sm-${size}`), ...GRID_SIZES.map(size => `grid-md-${size}`), ...GRID_SIZES.map(size => `grid-lg-${size}`), ...GRID_SIZES.map(size => `grid-xl-${size}`)]);\nexport default gridClasses;","import _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nconst _excluded = [\"className\", \"columns\", \"columnSpacing\", \"component\", \"container\", \"direction\", \"item\", \"rowSpacing\", \"spacing\", \"wrap\", \"zeroMinWidth\"];\n// A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { unstable_extendSxProp as extendSxProp, handleBreakpoints, unstable_resolveBreakpointValues as resolveBreakpointValues } from '@mui/system';\nimport { unstable_composeClasses as composeClasses } from '@mui/base';\nimport requirePropFactory from '../utils/requirePropFactory';\nimport styled from '../styles/styled';\nimport useThemeProps from '../styles/useThemeProps';\nimport useTheme from '../styles/useTheme';\nimport GridContext from './GridContext';\nimport gridClasses, { getGridUtilityClass } from './gridClasses';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nfunction getOffset(val) {\n  const parse = parseFloat(val);\n  return `${parse}${String(val).replace(String(parse), '') || 'px'}`;\n}\nexport function generateGrid({\n  theme,\n  ownerState\n}) {\n  let size;\n  return theme.breakpoints.keys.reduce((globalStyles, breakpoint) => {\n    // Use side effect over immutability for better performance.\n    let styles = {};\n    if (ownerState[breakpoint]) {\n      size = ownerState[breakpoint];\n    }\n    if (!size) {\n      return globalStyles;\n    }\n    if (size === true) {\n      // For the auto layouting\n      styles = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n    } else if (size === 'auto') {\n      styles = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        flexShrink: 0,\n        maxWidth: 'none',\n        width: 'auto'\n      };\n    } else {\n      const columnsBreakpointValues = resolveBreakpointValues({\n        values: ownerState.columns,\n        breakpoints: theme.breakpoints.values\n      });\n      const columnValue = typeof columnsBreakpointValues === 'object' ? columnsBreakpointValues[breakpoint] : columnsBreakpointValues;\n      if (columnValue === undefined || columnValue === null) {\n        return globalStyles;\n      }\n      // Keep 7 significant numbers.\n      const width = `${Math.round(size / columnValue * 10e7) / 10e5}%`;\n      let more = {};\n      if (ownerState.container && ownerState.item && ownerState.columnSpacing !== 0) {\n        const themeSpacing = theme.spacing(ownerState.columnSpacing);\n        if (themeSpacing !== '0px') {\n          const fullWidth = `calc(${width} + ${getOffset(themeSpacing)})`;\n          more = {\n            flexBasis: fullWidth,\n            maxWidth: fullWidth\n          };\n        }\n      }\n\n      // Close to the bootstrap implementation:\n      // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n      styles = _extends({\n        flexBasis: width,\n        flexGrow: 0,\n        maxWidth: width\n      }, more);\n    }\n\n    // No need for a media query for the first size.\n    if (theme.breakpoints.values[breakpoint] === 0) {\n      Object.assign(globalStyles, styles);\n    } else {\n      globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n    }\n    return globalStyles;\n  }, {});\n}\nexport function generateDirection({\n  theme,\n  ownerState\n}) {\n  const directionValues = resolveBreakpointValues({\n    values: ownerState.direction,\n    breakpoints: theme.breakpoints.values\n  });\n  return handleBreakpoints({\n    theme\n  }, directionValues, propValue => {\n    const output = {\n      flexDirection: propValue\n    };\n    if (propValue.indexOf('column') === 0) {\n      output[`& > .${gridClasses.item}`] = {\n        maxWidth: 'none'\n      };\n    }\n    return output;\n  });\n}\n\n/**\n * Extracts zero value breakpoint keys before a non-zero value breakpoint key.\n * @example { xs: 0, sm: 0, md: 2, lg: 0, xl: 0 } or [0, 0, 2, 0, 0]\n * @returns [xs, sm]\n */\nfunction extractZeroValueBreakpointKeys({\n  breakpoints,\n  values\n}) {\n  let nonZeroKey = '';\n  Object.keys(values).forEach(key => {\n    if (nonZeroKey !== '') {\n      return;\n    }\n    if (values[key] !== 0) {\n      nonZeroKey = key;\n    }\n  });\n  const sortedBreakpointKeysByValue = Object.keys(breakpoints).sort((a, b) => {\n    return breakpoints[a] - breakpoints[b];\n  });\n  return sortedBreakpointKeysByValue.slice(0, sortedBreakpointKeysByValue.indexOf(nonZeroKey));\n}\nexport function generateRowGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    rowSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && rowSpacing !== 0) {\n    const rowSpacingValues = resolveBreakpointValues({\n      values: rowSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof rowSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: rowSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, rowSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          marginTop: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingTop: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        marginTop: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingTop: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function generateColumnGap({\n  theme,\n  ownerState\n}) {\n  const {\n    container,\n    columnSpacing\n  } = ownerState;\n  let styles = {};\n  if (container && columnSpacing !== 0) {\n    const columnSpacingValues = resolveBreakpointValues({\n      values: columnSpacing,\n      breakpoints: theme.breakpoints.values\n    });\n    let zeroValueBreakpointKeys;\n    if (typeof columnSpacingValues === 'object') {\n      zeroValueBreakpointKeys = extractZeroValueBreakpointKeys({\n        breakpoints: theme.breakpoints.values,\n        values: columnSpacingValues\n      });\n    }\n    styles = handleBreakpoints({\n      theme\n    }, columnSpacingValues, (propValue, breakpoint) => {\n      var _zeroValueBreakpointK2;\n      const themeSpacing = theme.spacing(propValue);\n      if (themeSpacing !== '0px') {\n        return {\n          width: `calc(100% + ${getOffset(themeSpacing)})`,\n          marginLeft: `-${getOffset(themeSpacing)}`,\n          [`& > .${gridClasses.item}`]: {\n            paddingLeft: getOffset(themeSpacing)\n          }\n        };\n      }\n      if ((_zeroValueBreakpointK2 = zeroValueBreakpointKeys) != null && _zeroValueBreakpointK2.includes(breakpoint)) {\n        return {};\n      }\n      return {\n        width: '100%',\n        marginLeft: 0,\n        [`& > .${gridClasses.item}`]: {\n          paddingLeft: 0\n        }\n      };\n    });\n  }\n  return styles;\n}\nexport function resolveSpacingStyles(spacing, breakpoints, styles = {}) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [styles[`spacing-xs-${String(spacing)}`]];\n  }\n  // in case of object `spacing`\n  const spacingStyles = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      spacingStyles.push(styles[`spacing-${breakpoint}-${String(value)}`]);\n    }\n  });\n  return spacingStyles;\n}\n\n// Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\nconst GridRoot = styled('div', {\n  name: 'MuiGrid',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    const {\n      container,\n      direction,\n      item,\n      spacing,\n      wrap,\n      zeroMinWidth,\n      breakpoints\n    } = ownerState;\n    let spacingStyles = [];\n\n    // in case of grid item\n    if (container) {\n      spacingStyles = resolveSpacingStyles(spacing, breakpoints, styles);\n    }\n    const breakpointsStyles = [];\n    breakpoints.forEach(breakpoint => {\n      const value = ownerState[breakpoint];\n      if (value) {\n        breakpointsStyles.push(styles[`grid-${breakpoint}-${String(value)}`]);\n      }\n    });\n    return [styles.root, container && styles.container, item && styles.item, zeroMinWidth && styles.zeroMinWidth, ...spacingStyles, direction !== 'row' && styles[`direction-xs-${String(direction)}`], wrap !== 'wrap' && styles[`wrap-xs-${String(wrap)}`], ...breakpointsStyles];\n  }\n})(({\n  ownerState\n}) => _extends({\n  boxSizing: 'border-box'\n}, ownerState.container && {\n  display: 'flex',\n  flexWrap: 'wrap',\n  width: '100%'\n}, ownerState.item && {\n  margin: 0 // For instance, it's useful when used with a `figure` element.\n}, ownerState.zeroMinWidth && {\n  minWidth: 0\n}, ownerState.wrap !== 'wrap' && {\n  flexWrap: ownerState.wrap\n}), generateDirection, generateRowGap, generateColumnGap, generateGrid);\nexport function resolveSpacingClasses(spacing, breakpoints) {\n  // undefined/null or `spacing` <= 0\n  if (!spacing || spacing <= 0) {\n    return [];\n  }\n  // in case of string/number `spacing`\n  if (typeof spacing === 'string' && !Number.isNaN(Number(spacing)) || typeof spacing === 'number') {\n    return [`spacing-xs-${String(spacing)}`];\n  }\n  // in case of object `spacing`\n  const classes = [];\n  breakpoints.forEach(breakpoint => {\n    const value = spacing[breakpoint];\n    if (Number(value) > 0) {\n      const className = `spacing-${breakpoint}-${String(value)}`;\n      classes.push(className);\n    }\n  });\n  return classes;\n}\nconst useUtilityClasses = ownerState => {\n  const {\n    classes,\n    container,\n    direction,\n    item,\n    spacing,\n    wrap,\n    zeroMinWidth,\n    breakpoints\n  } = ownerState;\n  let spacingClasses = [];\n\n  // in case of grid item\n  if (container) {\n    spacingClasses = resolveSpacingClasses(spacing, breakpoints);\n  }\n  const breakpointsClasses = [];\n  breakpoints.forEach(breakpoint => {\n    const value = ownerState[breakpoint];\n    if (value) {\n      breakpointsClasses.push(`grid-${breakpoint}-${String(value)}`);\n    }\n  });\n  const slots = {\n    root: ['root', container && 'container', item && 'item', zeroMinWidth && 'zeroMinWidth', ...spacingClasses, direction !== 'row' && `direction-xs-${String(direction)}`, wrap !== 'wrap' && `wrap-xs-${String(wrap)}`, ...breakpointsClasses]\n  };\n  return composeClasses(slots, getGridUtilityClass, classes);\n};\nconst Grid = /*#__PURE__*/React.forwardRef(function Grid(inProps, ref) {\n  const themeProps = useThemeProps({\n    props: inProps,\n    name: 'MuiGrid'\n  });\n  const {\n    breakpoints\n  } = useTheme();\n  const props = extendSxProp(themeProps);\n  const {\n      className,\n      columns: columnsProp,\n      columnSpacing: columnSpacingProp,\n      component = 'div',\n      container = false,\n      direction = 'row',\n      item = false,\n      rowSpacing: rowSpacingProp,\n      spacing = 0,\n      wrap = 'wrap',\n      zeroMinWidth = false\n    } = props,\n    other = _objectWithoutPropertiesLoose(props, _excluded);\n  const rowSpacing = rowSpacingProp || spacing;\n  const columnSpacing = columnSpacingProp || spacing;\n  const columnsContext = React.useContext(GridContext);\n\n  // columns set with default breakpoint unit of 12\n  const columns = container ? columnsProp || 12 : columnsContext;\n  const breakpointsValues = {};\n  const otherFiltered = _extends({}, other);\n  breakpoints.keys.forEach(breakpoint => {\n    if (other[breakpoint] != null) {\n      breakpointsValues[breakpoint] = other[breakpoint];\n      delete otherFiltered[breakpoint];\n    }\n  });\n  const ownerState = _extends({}, props, {\n    columns,\n    container,\n    direction,\n    item,\n    rowSpacing,\n    columnSpacing,\n    wrap,\n    zeroMinWidth,\n    spacing\n  }, breakpointsValues, {\n    breakpoints: breakpoints.keys\n  });\n  const classes = useUtilityClasses(ownerState);\n  return /*#__PURE__*/_jsx(GridContext.Provider, {\n    value: columns,\n    children: /*#__PURE__*/_jsx(GridRoot, _extends({\n      ownerState: ownerState,\n      className: clsx(classes.root, className),\n      as: component,\n      ref: ref\n    }, otherFiltered))\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Grid.propTypes /* remove-proptypes */ = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n  /**\n   * The content of the component.\n   */\n  children: PropTypes.node,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * The number of columns.\n   * @default 12\n   */\n  columns: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.number), PropTypes.number, PropTypes.object]),\n  /**\n   * Defines the horizontal space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  columnSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * If `true`, the component will have the flex *container* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  container: PropTypes.bool,\n  /**\n   * Defines the `flex-direction` style property.\n   * It is applied for all screen sizes.\n   * @default 'row'\n   */\n  direction: PropTypes.oneOfType([PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row']), PropTypes.arrayOf(PropTypes.oneOf(['column-reverse', 'column', 'row-reverse', 'row'])), PropTypes.object]),\n  /**\n   * If `true`, the component will have the flex *item* behavior.\n   * You should be wrapping *items* with a *container*.\n   * @default false\n   */\n  item: PropTypes.bool,\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `lg` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  lg: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `md` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  md: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the vertical space between the type `item` components.\n   * It overrides the value of the `spacing` prop.\n   */\n  rowSpacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `sm` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  sm: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * Defines the space between the type `item` components.\n   * It can only be used on a type `container` component.\n   * @default 0\n   */\n  spacing: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.number, PropTypes.string])), PropTypes.number, PropTypes.object, PropTypes.string]),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object]),\n  /**\n   * Defines the `flex-wrap` style property.\n   * It's applied for all screen sizes.\n   * @default 'wrap'\n   */\n  wrap: PropTypes.oneOf(['nowrap', 'wrap-reverse', 'wrap']),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for the `xl` breakpoint and wider screens if not overridden.\n   * @default false\n   */\n  xl: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If a number, it sets the number of columns the grid item uses.\n   * It can't be greater than the total number of columns of the container (12 by default).\n   * If 'auto', the grid item's width matches its content.\n   * If false, the prop is ignored.\n   * If true, the grid item's width grows to use the space available in the grid container.\n   * The value is applied for all the screen sizes with the lowest priority.\n   * @default false\n   */\n  xs: PropTypes.oneOfType([PropTypes.oneOf(['auto']), PropTypes.number, PropTypes.bool]),\n  /**\n   * If `true`, it sets `min-width: 0` on the item.\n   * Refer to the limitations section of the documentation to better understand the use case.\n   * @default false\n   */\n  zeroMinWidth: PropTypes.bool\n} : void 0;\nif (process.env.NODE_ENV !== 'production') {\n  const requireProp = requirePropFactory('Grid', Grid);\n  // eslint-disable-next-line no-useless-concat\n  Grid['propTypes' + ''] = _extends({}, Grid.propTypes, {\n    direction: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\nexport default Grid;","import React from 'react'\nimport Stack from '@mui/material/Stack'\nimport Skeleton from '@mui/material/Skeleton'\nimport Grid from '@mui/material/Grid'\nimport Box from '@mui/material/Box'\n\n/**\n * DummySite\n *\n * @return {JSX.Element}\n */\nconst DummySite = () => {\n  return (\n    <Stack spacing={1} sx={{ background: '#eceff1' }}>\n      <Skeleton variant=\"rectangular\" height=\"3rem\" />\n      <Skeleton variant=\"rectangular\" sx={{ paddingTop: '50%' }} />\n      <Grid container wrap=\"wrap\" sx={{ justifyContent: 'center', py: 3 }}>\n        <Box sx={{ m: 1 }}>\n          <Skeleton variant=\"text\" width={240} />\n          <Skeleton variant=\"circular\" width={40} height={40} sx={{ m: 1 }} />\n          <Skeleton variant=\"rectangular\" width={240} height={100} />\n          <Skeleton width=\"80%\" />\n          <Skeleton width=\"40%\" />\n        </Box>\n        <Box sx={{ m: 1 }}>\n          <Skeleton variant=\"text\" width={240} />\n          <Skeleton variant=\"circular\" width={40} height={40} sx={{ m: 1 }} />\n          <Skeleton variant=\"rectangular\" width={240} height={100} />\n          <Skeleton width=\"80%\" />\n          <Skeleton width=\"40%\" />\n        </Box>\n        <Box sx={{ m: 1 }}>\n          <Skeleton variant=\"text\" width={240} />\n          <Skeleton variant=\"circular\" width={40} height={40} sx={{ m: 1 }} />\n          <Skeleton variant=\"rectangular\" width={240} height={100} />\n          <Skeleton width=\"80%\" />\n          <Skeleton width=\"40%\" />\n        </Box>\n      </Grid>\n      <Skeleton variant=\"rectangular\" height=\"8rem\" />\n    </Stack>\n  )\n}\nexport default DummySite\n","import React, { Component } from 'react'\nimport { Link } from 'gatsby'\nimport LinkIcon from '@mui/icons-material/InsertLink'\nimport styles from './product-single.module.scss'\nimport Wrap from '@/components/atoms/Wrap'\nimport Image from '@/components/atoms/Image'\nimport Bio from '@/components/molecules/bio.component'\nimport LinearIndeterminate from '@/components/atoms/LinearIndeterminate'\nimport DummySite from '@/components/atoms/DummySite'\n\n/**\n *　プロダクトシングルページ\n *\n * @class ProductPostTemplate\n * @extends {Component}\n */\nclass ProductSingleTemplate extends Component {\n  /**\n   * constructor\n   *\n   * @param {object} props\n   */\n  constructor(props) {\n    super(props)\n    this.state = {\n      post: props.data.internalPosts,\n      previous: props.pageContext.previous,\n      next: props.pageContext.next,\n      feature: props.data.internalPosts.attachment[0],\n      featureActiveID: 0,\n      isFeatureLoad: false,\n    }\n    this.handleClick = this.handleClick.bind(this)\n  }\n\n  /**\n   * 画像の差し替え\n   *\n   * @param {number} id\n   */\n  async handleClick(id) {\n    const { feature, isFeatureLoad } = this.state\n    // 同一画像以外で非ロード中の場合のみ変更可.\n    if (feature !== this.state.post.attachment[id] && !isFeatureLoad) {\n      await this.setState({\n        feature: this.state.post.attachment[id],\n        featureActiveID: id,\n        isFeatureLoad: true,\n      })\n      await setTimeout(() => this.setState({ isFeatureLoad: false }), 2000)\n    }\n  }\n\n  /**\n   * レンダリング\n   *\n   * @return {JSX.Element}\n   */\n  render() {\n    const { post, previous, next, feature, featureActiveID, isFeatureLoad } =\n      this.state\n\n    return (\n      <div className={styles.product}>\n        <Wrap>\n          <article className={styles.product__entry}>\n            <div className={styles.product__entry__container}>\n              <div className={styles.product__entry__container__primary}>\n                <div className={styles.product__primary}>\n                  <div className={styles.product__primary__categories}>\n                    <div\n                      className={styles.product__primary__categories__return}\n                    >\n                      <Link to={`/product`} className=\"button\">\n                        ← リストへ戻る\n                      </Link>\n                    </div>\n\n                    {post.category.map((_cat_name, _cat_index) => {\n                      return (\n                        <div\n                          className={\n                            styles.product__primary__categories__category\n                          }\n                          key={_cat_index}\n                        >\n                          <Link\n                            to={`/product/category/${encodeURI(_cat_name)}`}\n                          >\n                            {_cat_name}\n                          </Link>\n                        </div>\n                      )\n                    })}\n                  </div>\n\n                  <header className={styles.product__primary__header}>\n                    <h1 className={styles.product__primary__header__title}>\n                      {!post.link && post.title}\n                      {post.link && (\n                        <a\n                          href={post.link}\n                          target=\"_blank\"\n                          rel=\"noopener noreferrer\"\n                          className={\n                            styles.product__primary__header__title__link\n                          }\n                        >\n                          {post.title}\n                          <LinkIcon />\n                        </a>\n                      )}\n                    </h1>\n                    <div className={styles.product__primary__header__date}>\n                      Update: {post.updated}\n                      {post.link && (\n                        <span\n                          className={\n                            styles.product__primary__header__date__preview\n                          }\n                        >\n                          Preview:\n                          <a\n                            href={post.link}\n                            target=\"_blank\"\n                            rel=\"noopener noreferrer\"\n                          >\n                            {post.link}\n                          </a>\n                        </span>\n                      )}\n                    </div>\n                  </header>\n\n                  <div\n                    className={styles.product__primary__content}\n                    dangerouslySetInnerHTML={{ __html: post.content }}\n                  />\n\n                  {1 < post.attachment.length && (\n                    <div\n                      className={`${styles.product__primary__attachments} ${styles.product__primary__attachmentsLarge}`}\n                    >\n                      {post.attachment.map((_image_src, _image_index) => {\n                        return (\n                          <div\n                            className={\n                              styles.product__primary__attachments__attachment\n                            }\n                            key={_image_index}\n                          >\n                            {_image_index === featureActiveID &&\n                              isFeatureLoad && <LinearIndeterminate />}\n                            <button\n                              className={\n                                styles.product__primary__attachments__attachment__link\n                              }\n                              onClick={() => this.handleClick(_image_index)}\n                            >\n                              <Image src={_image_src} />\n                            </button>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  )}\n\n                  <div className={styles.product__primary__tags}>\n                    {post.tag.map((_tag_name, _tag_index) => {\n                      return (\n                        <div\n                          className={styles.product__primary__tags__tag}\n                          key={_tag_index}\n                        >\n                          <Link to={`/product/tag/${encodeURI(_tag_name)}`}>\n                            {_tag_name}\n                          </Link>\n                        </div>\n                      )\n                    })}\n                  </div>\n\n                  <nav className={styles.product__primary__navi}>\n                    <ul className={styles.product__primary__navi__list}>\n                      <li className={styles.product__primary__navi__list__item}>\n                        {next && (\n                          <Link\n                            to={`/product/${next.alternative_id}`}\n                            rel=\"next\"\n                          >\n                            ← {next.title}\n                          </Link>\n                        )}\n                      </li>\n                      <li className={styles.product__primary__navi__list__item}>\n                        {previous && (\n                          <Link\n                            to={`/product/${previous.alternative_id}`}\n                            rel=\"prev\"\n                          >\n                            {previous.title} →\n                          </Link>\n                        )}\n                      </li>\n                    </ul>\n                  </nav>\n\n                  <footer className={styles.product__primary__footer}>\n                    <Bio />\n                  </footer>\n\n                  {1 < post.attachment.length && (\n                    <div\n                      className={`${styles.product__primary__attachments} ${styles.product__primary__attachmentsSmall}`}\n                    >\n                      {post.attachment.map((_image_src, _image_index) => {\n                        return (\n                          <div\n                            className={\n                              styles.product__primary__attachments__attachment\n                            }\n                            key={_image_index}\n                          >\n                            {_image_index === featureActiveID &&\n                              isFeatureLoad && <LinearIndeterminate />}\n                            <button\n                              className={\n                                styles.product__primary__attachments__attachment__link\n                              }\n                              onClick={() => this.handleClick(_image_index)}\n                            >\n                              <Image src={_image_src} />\n                            </button>\n                          </div>\n                        )\n                      })}\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div className={styles.product__entry__container__secondary}>\n                <div className={styles.product__secondary}>\n                  <div className={styles.product__secondary__feature}>\n                    {isFeatureLoad ? (\n                      <DummySite />\n                    ) : (\n                      <Image src={feature} alt={post.title} />\n                    )}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </article>\n        </Wrap>\n      </div>\n    )\n  }\n}\n\nexport default ProductSingleTemplate\n","import React from 'react'\nimport { graphql } from 'gatsby'\nimport Metadata from '@/components/atoms/Metadata'\nimport Layout from '@/templates/layout.template'\nimport Template from '@/templates/product/product-single.template'\n\n/**\n * PRODUCT PAGE - Single.\n *\n * @param  {{data: object, pageContext: object, location: string}} props\n * @return {JSX.Element}\n */\nconst ProductSingle = ({ data, pageContext, location }) => {\n  const { title: pageTitle } = data.internalPosts\n\n  return (\n    <Layout location={location} title={pageTitle} isPageType=\"ProductSingle\">\n      <Template data={data} pageContext={pageContext} />\n    </Layout>\n  )\n}\nexport default ProductSingle\n\nexport const pageQuery = graphql`\n  query ProductPostBySlug($slug: Int!) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    internalPosts(alternative_id: { eq: $slug }) {\n      updated\n      title\n      category\n      tag\n      attachment\n      link\n      content\n    }\n  }\n`\n\nexport const Head = ({ data }) => {\n  const post = data.internalPosts\n  return <Metadata title={post.title} description={post.content} />\n}\n"],"names":["_interopRequireDefault","exports","_createSvgIcon","_jsxRuntime","_default","default","jsx","d","height","prototype","format","isLoading","isLoaded","images","loading","style","shouldLoad","opacity","placeholder","layout","width","backgroundColor","objectFit","objectPosition","wrapperStyle","position","top","left","bottom","right","transition","sources","paddingTop","maxWidth","display","React","alt","role","src","children","props","Fragment","Sizer","srcSet","decoding","undefined","fallback","t","s","sizes","Image","length","map","media","type","key","fallbackImage","propTypes","PropTypes","Picture","displayName","isRequired","Placeholder","_Picture$propTypes","propName","componentName","MainImage","rest","image","altValidator","Set","as","className","class","preactClass","onStartLoad","onLoad","onError","overflow","wStyle","wClass","wrapperProps","useRef","useMemo","JSON","stringify","sizer","useEffect","renderImageToStringPromise","import","then","renderImageToString","swapPlaceholderImage","renderImage","root","current","querySelector","ssrImage","hasNativeLazyLoadSupport","complete","wasCached","setTimeout","removeAttribute","addEventListener","removeEventListener","onLoadListener","imageCache","add","cacheKey","has","innerHTML","animationFrame","requestAnimationFrame","cleanupCallback","cancelAnimationFrame","useLayoutEffect","ref","dangerouslySetInnerHTML","__html","suppressHydrationWarning","memo","warn","GatsbyImageHydrator","GatsbyImage","checkDimensionProps","validLayouts","Error","GatsbyImageBrowser","__imageData","imageData","__error","console","StaticImage","camelCase","input","options","Array","isArray","TypeError","Object","assign","pascalCase","x","trim","filter","join","toUpperCase","toLowerCase","string","isLastCharLower","isLastCharUpper","isLastLastCharUpper","i","character","test","slice","preserveCamelCase","replace","_","p1","m","charAt","module","targetEdge","useStaticQuery","allFile","edges","find","edge","node","id","childImageSharp","G","gatsbyImageData","data","author","site","siteMetadata","margin","marginRight","flexBasic","clipPath","avatar","name","flex","fontSize","summary","Link","to","StyledDropback","styled","Box","StyledLinear","StyledLinearProgress","LinearProgress","_excluded","joinChildren","separator","childrenArray","Boolean","reduce","output","child","index","push","StackRoot","slot","overridesResolver","styles","ownerState","theme","flexDirection","values","direction","breakpoints","propValue","spacing","transformer","base","keys","acc","breakpoint","directionValues","spacingValues","forEach","previousDirectionValue","styleFromPropValue","row","column","deepmerge","Stack","inProps","themeProps","useThemeProps","extendSxProp","component","divider","other","getUnit","String","match","toUnitless","parseFloat","getSkeletonUtilityClass","generateUtilityClass","generateUtilityClasses","_t","_t2","_t3","_t4","pulseKeyframe","keyframes","waveKeyframe","SkeletonRoot","variant","animation","hasChildren","withChildren","fitContent","heightAuto","radiusUnit","shape","borderRadius","radiusValue","vars","palette","Skeleton","bg","text","primary","mode","marginTop","marginBottom","transformOrigin","transform","Math","round","content","visibility","css","action","hover","classes","slots","composeClasses","useUtilityClasses","getGridUtilityClass","GRID_SIZES","gridClasses","wrap","size","getOffset","val","parse","extractZeroValueBreakpointKeys","nonZeroKey","sortedBreakpointKeysByValue","sort","a","b","indexOf","GridRoot","container","item","zeroMinWidth","spacingStyles","Number","isNaN","value","resolveSpacingStyles","breakpointsStyles","boxSizing","flexWrap","minWidth","rowSpacing","rowSpacingValues","zeroValueBreakpointKeys","_zeroValueBreakpointK","themeSpacing","includes","columnSpacing","columnSpacingValues","_zeroValueBreakpointK2","marginLeft","paddingLeft","globalStyles","flexBasis","flexGrow","flexShrink","columnsBreakpointValues","columns","columnValue","more","fullWidth","up","spacingClasses","resolveSpacingClasses","breakpointsClasses","Grid","useTheme","columnsProp","columnSpacingProp","rowSpacingProp","columnsContext","breakpointsValues","otherFiltered","sx","background","justifyContent","py","state","post","internalPosts","previous","pageContext","next","feature","attachment","featureActiveID","isFeatureLoad","handleClick","bind","async","this","setState","render","Wrap","category","_cat_name","_cat_index","encodeURI","link","title","href","target","rel","updated","_image_src","_image_index","onClick","tag","_tag_name","_tag_index","alternative_id","Component","location","pageTitle","isPageType","Head","Metadata","description"],"sourceRoot":""}